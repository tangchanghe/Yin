{"name":"人人影视&&胡影","host":"https://www.rttks.com/rrtop/dianying.html","sourl":"https://www.rttks.com/rrcz**/page/fypage.html","sy":"","fl":"","er":"","so":"","time":"2024-11-16T11:51:33","ttl":"","fbhost":"","gy":"","off":"1","gs":"HOST"},{"name":"03影院&&随风","host":"https://www.03yy.co/search.php?searchtype=5&order=time&tid=1","sourl":"https://www.03yy.co/search.php?page=fypage&searchword=**&searchtype=","sy":"","fl":"","er":"","so":"","time":"2024-06-25 00:52:21","off":"1","gs":"HOST","fbhost":"","simplifiedName":"03影院"},{"name":"北川影视&&随风","host":"let html = fetch(\"https://www.bcyingshi.ink/fb/\");\nlet list = pdfa(html, \"body&&li:matches(官网)\");\nlet url = [];\nfor (let i of list) {\n    url.push(pd(i, \"a&&href\"))\n};\n\nlet host = [];\nlet urls = url;\nfor (let i = 0; i < urls.length; i++) {\n    let Code = JSON.parse(fetch(urls[i], {\n    withStatusCode: true,\n    timeout: 5000\n})).statusCode;\n    if (Code == 200) {\nhost.push(urls[i] + \"/vodshow/1-----------/\")\n        console.log(\"找到目标值: \" + Code + \", 循环停止。\");\n        break;\n    };\n};\nreturn host[0]","sourl":"SURL/vodsearch/page/fypage/wd/**/","sy":"","fl":"","er":"","so":"","time":"2024-07-03T11:40:40","off":"1","gs":"HOST","fbhost":"http://www.bcys.xyz//vodshow/1-----------/"},{"name":"侠客影视&&多多","host":"http://xkys.link/index.php/vod/show/id/1.html","sourl":"http://xkys.link/index.php/vod/search/page/fypage/wd/**.html","sy":"    标题1 = \"h2:matches(热映)&&Text\";\n    标题2 = \"h2:matches(电影)&&Text\";\n    标题3 = \"h2:matches(电视)&&Text\";\n    标题4 = \"h2:matches(动漫)&&Text\";\n    标题5 = \"h2:matches(综艺)&&Text\";\n    标题6 = \"h2,5&&Text\";\n\n    列表1 = \".module,0&&.scroll-box&&a:lt(12)\";\n    列表2 = \".module,1&&.tab-list&&a:lt(12)\";\n    列表3 = \".module,2&&.tab-list&&a:lt(12)\";\n    列表4 = \".module,3&&.tab-list&&a:lt(12)\";\n    列表5 = \".module,4&&.tab-list&&a:lt(12)\";\n    列表6 = \".module,5&&.tab-list&&a:lt(12)\";\n\n    html = fetch(MY_URL);\n\n    var 列表显示 = function(list) {\n        let l = [];\n        for (let j of list) {\n            let li = j;\n            let lists = [];\n            for (let i in li) {\n                let pic = pdfh(li[i], \"img&&data-original\");\n                let img = /.*url=|.*tu=/.test(pic) ? pic.replace(/.*url=|.*tu=/, \"\") : (/http|pic|jpg|png|jpeg|\\//.test(pic)) ? pd(li[i], \"img&&data-original\") : \"hiker://images/home_bg\";\n                let title = pdfh(li[i], \"a&&title\");\n                let url = pd(li[i], \"a&&href\");\n                let desc = pdfh(li[i], \".module-item-note&&Text\");\n                lists.push(title + '$' + desc + '$' + img + '$' + url);\n            }\n            l.push(lists);\n        };\n        return l;\n    };\n    \n    //var 免嗅 = function(input) {\n    //转嗅探\n    //return \"嗅探\";\n    //let html = fetch(input);\n    //}","fl":"","er":"","so":"","time":"2024-06-30 14:50:43","off":"1","gs":"HOST","fbhost":"","ttl":1,"sxtit":"规则失效"},{"name":"胖虎影视&&海阔小白","host":"https://physvod.com/vodshow/1.html","sourl":"https://physvod.com/phsch/page/fypage/wd/**.html","sy":"","fl":"","er":"","so":"","time":"2024-06-26 16:43:05","off":"1","gs":"HOST","fbhost":"","simplifiedName":"胖虎影视"},{"name":"在线电影&&随风","host":"https://www.zaixiandianying8.com/vodshow/1-----------.html","sourl":"https://www.zaixiandianying8.com/vodsearch/**----------fypage---.html","sy":"","fl":"","er":"","so":"","time":"2024-06-21 15:40:30","fbhost":"","off":"1","gs":"HOST","simplifiedName":"在线电影"},{"name":"爱影视&&勇士","host":"https://aiyingshis.com/vodtype/6.html","sourl":"https://aiyingshis.com/vodsearch/page/fypage/wd/**.html","sy":"","fl":"","er":"","so":"","time":"2024-06-26 16:27:47","off":"1","gs":"HOST","fbhost":"","simplifiedName":"爱影视","ttl":1,"sxtit":"无法访问"},{"name":"影视大全&&古月","host":"https://www.sdsrty.com/index.php/vod/type/id/1.html","sourl":"https://www.sdsrty.com/index.php/vod/search/page/fypage/wd/**.html","sy":"    标题1 = \"h2:matches(推荐)&&Text\";\n    标题2 = \"h2:matches(电视剧)&&Text\";\n    标题3 = \"h2:matches(电影)&&Text\";\n    标题4 = \"h2:matches(动漫)&&Text\";\n    标题5 = \"h2:matches(综艺)&&Text\";\n\n    列表1 = \".new-up-list,0&&li:lt(6)\";\n    列表2 = \".new-up-list,1&&li:lt(9)\";\n    列表3 = \".new-up-list,2&&li:lt(9)\";\n    列表4 = \".new-up-list,4&&li:lt(9)\";\n    列表5 = \".new-up-list,3&&li:lt(9)\";\n\n    html = fetch(MY_URL);\n\n    var 列表 = function(list) {\n        let l = [];\n        for (let j of list) {\n            let li = j;\n            let lists = [];\n            for (let i in li) {\n                let pic = pdfh(li[i], \"img&&data-original\");\n                let img = /.*url=|.*tu=/.test(pic) ? pic.replace(/.*url=|.*tu=/, \"\") : (/http|pic|jpg|png|jpeg|\\//.test(pic)) ? pd(li[i], \"img&&data-original\") : \"hiker://images/home_bg\";\n                let title = pdfh(li[i], \"h5--span&&Text\");\n                let url = pd(li[i], \"a&&href\");\n                let desc = pdfh(li[i], \"span&&Text\");\n                lists.push(title + '$' + desc + '$' + img + '$' + url);\n            }\n            l.push(lists);\n        };\n        return l;\n    };\n    ","fl":"    电影 = MY_URL;\n    剧集 = MY_URL.replace(/1/, \"2\");\n    动漫 = MY_URL.replace(/1/, \"4\");\n    综艺 = MY_URL.replace(/1/, \"3\");\n\n    let tr_url = getMyVar(\"Myurl.url\", MY_URL);\n\n    if (/\\/?([\\w\\d]+|)-.*?-.*?-.*?-.*?-.*?-.*?-.*?-\\d*---\\d*(\\.html|\\/$)/.test(MY_URL)) {\n        true_url = tr_url.replace(/---\\.html/, page + '---.html').replace(/---(\\d+)\\.html/, page + '---$1.html').replace(/---\\//, page + '---/').replace(/---(\\d+)\\//, page + '---$1/');\n    } else\n    if (/((\\/(\\w*)show)?((\\/|-)[\\w\\d%])?(\\/area\\/[\\w\\d%]+)?(\\/by\\/[\\w\\d%]+)?(\\/id\\/\\d+)?(\\/letter\\/[\\w\\d%]+)?)(\\/page\\/\\d+)?(\\/year\\/\\d+)?(\\.html|\\/$)/.test(MY_URL)) {\n        true_url = /\\/year\\//.test(tr_url) ? tr_url.replace(/year\\/(\\d+).html/, 'page/' + page + '/year/$1.html').replace(/year\\/(\\d+)\\//, 'page/' + page + '/year/$1/') : /\\/$/.test(tr_url) ? tr_url + 'page/' + page + '/' : tr_url.replace(/\\.html/, '/page/' + page + '.html');\n    } else\n    if (/vod-show-id|vodtype\\//.test(MY_URL)) {\n        true_url = tr_url.replace(/vodtype\\/(\\d+)\\.html/, 'vodtype/$1/page/' + page + '.html').replace(/\\-id\\-(\\d+)/, \"-id-$1-page-\" + page);\n    }; //log(true_url);\n\n\n    大类 = \"body&&.nav-tabs\";\n    小类 = \"body&&.title\";\n    子类 = \"body&&a:not(:matches(重置|首页|app|APP|热榜|发布|周表|当前))\";\n\n    大名 = \"a&&Text\";\n    大链 = \"a&&href\";\n    小名 = \"a&&Text\";\n    小链 = \"a&&href\";\n\n    var 换大链 = function(text) {\n        return text.replace(/type/g, \"show\");\n    };\n\n    html = fetch(true_url);\n\n    var 列表 = function(html) {\n        let list = pdfa(html, \".new-up-list&&li\");\n        let s = [];\n        for (let i in list) {\n            let li = list[i];\n            s.push({\n                title: pdfh(li, \"h5--span&&Text\"),\n                desc: pdfh(li, \"span&&Text\"),\n                img: pd(li, \"img&&data-original\"),\n                url: pd(li, \"a&&href\")\n            })\n        }\n        return s;\n    };","er":"    类型 = \".info-wrap&&p:matches(类型)&&Text\";\n    导演 = \".info-wrap&&p:matches(导演)&&Text\";\n    主演 = \".info-wrap&&p:matches(主演|演员)&&Text\";\n    简介 = \".summary-con&&p:matches(简介)&&Text\";\n\n    线路 = \".nav-tabs&&a\";\n    线名 = \"a&&Text\";\n\n    列表 = \"body&&.episodes-list\";\n    子列 = \"body&&a\";\n\n    名称 = \"a&&Text\";\n    链接 = \"a&&href\";\n\n    //二级链接为MY_URL\n    html = fetch(MY_URL);\n\n    var 推荐 = function(html) {\n        let list = [];\n        let contui = pdfa(html, \".new-up-list&&li\");\n        for (let i in contui) {\n            let li = contui[i];\n            list.push({\n                title: pdfh(li, \"h5--span&&Text\"),\n                desc: pdfh(li, \"span&&Text\"),\n                img: pd(li, \"img&&data-original\"),\n                url: pd(li, \"a&&href\")\n            })\n        };\n        return list;\n    };\n    ","so":"    //搜索链接为ssurl\n    let html = fetch(ssurl);\n\n    var 列表 = function(html) {\n        let list = pdfa(html, \".search-list&&li\");\n        let f = [];\n        for (let i in list) {\n            let li = list[i];\n            f.push({\n                title: pdfh(li, \"h5&&Text\"),\n                desc: pdfh(li, \"p:matches(资源)&&Text\"),\n                img: pdfh(li, \"img&&data-original\"),\n                url: pdfh(li, \"a&&href\")\n            })\n        };\n        return f;\n    };","time":"2024-11-15T19:43:37","ttl":"","fbhost":"","gy":"","off":"1","gs":"JS"},{"name":"剧爷爷js&&佚名","host":"https://www.juyeye.cc/vodshow/1-----------.html","sourl":"https://www.juyeye.cc/vodsearch/**----------fypage---.html","sy":"    标题1 = \"h2:matches(电影)&&Text\";\n    标题2 = \"h2:matches(电视剧)&&Text\";\n    标题3 = \"h2:matches(综艺)&&Text\";\n    标题4 = \"h2:matches(动漫)&&Text\";\n    标题5 = \"h2,5&&Text\";\n\n    列表1 = \".module,0&&.module-main&&a:lt(9)\";\n    列表2 = \".module,1&&.tab-list&&a:lt(9)\";\n    列表3 = \".module,2&&.tab-list&&a:lt(9)\";\n    列表4 = \".module,3&&.tab-list&&a:lt(9)\";\n    列表5 = \".module,4&&.tab-list&&a:lt(9)\";\n    \n\n    html = fetch(MY_URL);\n\n    var 列表 = function(list) {\n        let l = [];\n        for (let j of list) {\n            let li = j;\n            let lists = [];\n            for (let i in li) {\n                let pic = pdfh(li[i], \"img&&data-original\");\n                let img = /.*url=|.*tu=/.test(pic) ? pic.replace(/.*url=|.*tu=/, \"\") : (/http|pic|jpg|png|jpeg|\\//.test(pic)) ? pd(li[i], \"img&&data-original\") : \"hiker://images/home_bg\";\n                let title = pdfh(li[i], \"a&&title\");\n                let url = pd(li[i], \"a&&href\");\n                let desc = pdfh(li[i], \".module-item-note&&Text\");\n                lists.push(title + '$' + desc + '$' + img + '$' + url);\n            }\n            l.push(lists);\n        };\n        return l;\n    };","fl":"    电影 = MY_URL;\n    剧集 = MY_URL.replace(/1/, \"2\");\n    动漫 = MY_URL.replace(/1/, \"4\");\n    综艺 = MY_URL.replace(/1/, \"3\");\n\n    let tr_url = getMyVar(\"Myurl.url\", MY_URL);\n\n    if (/\\/?([\\w\\d]+|)-.*?-.*?-.*?-.*?-.*?-.*?-.*?-\\d*---\\d*(\\.html|\\/$)/.test(MY_URL)) {\n        true_url = tr_url.replace(/---\\.html/, page + '---.html').replace(/---(\\d+)\\.html/, page + '---$1.html').replace(/---\\//, page + '---/').replace(/---(\\d+)\\//, page + '---$1/');\n    } else\n    if (/((\\/(\\w*)show)?((\\/|-)[\\w\\d%])?(\\/area\\/[\\w\\d%]+)?(\\/by\\/[\\w\\d%]+)?(\\/id\\/\\d+)?(\\/letter\\/[\\w\\d%]+)?)(\\/page\\/\\d+)?(\\/year\\/\\d+)?(\\.html|\\/$)/.test(MY_URL)) {\n        true_url = /\\/year\\//.test(tr_url) ? tr_url.replace(/year\\/(\\d+).html/, 'page/' + page + '/year/$1.html').replace(/year\\/(\\d+)\\//, 'page/' + page + '/year/$1/') : /\\/$/.test(tr_url) ? tr_url + 'page/' + page + '/' : tr_url.replace(/\\.html/, '/page/' + page + '.html');\n    } else\n    if (/vod-show-id|vodtype\\//.test(MY_URL)) {\n        true_url = tr_url.replace(/vodtype\\/(\\d+)\\.html/, 'vodtype/$1/page/' + page + '.html').replace(/\\-id\\-(\\d+)/, \"-id-$1-page-\" + page);\n    }; //log(true_url);\n\n\n    大类 = \"body&&.swiper-wrapper\";\n    小类 = \"body&&.scroll-box\";\n    子类 = \"body&&a:not(:matches(重置|首页|app|APP|热榜|发布|周表|更新))\";\n\n    大名 = \"a&&Text\";\n    大链 = \"a&&href\";\n    小名 = \"a&&Text\";\n    小链 = \"a&&href\";\n\n    var 换大链 = function(text) {\n        return text.replace(/vodtype/g, \"vodshow\").replace('.html','-----------.html');\n    };\n\n    html = fetch(true_url);\n\n    var 列表 = function(html) {\n        let list = pdfa(html, \".module-items&&.module-item\");\n        let s = [];\n        for (let i in list) {\n            let li = list[i];\n            s.push({\n                title: pdfh(li, \"a&&title\"),\n                desc: pdfh(li, \".module-item-note&&Text\"),\n                img: pd(li, \"img&&data-original\"),\n                url: pd(li, \"a&&href\")\n            })\n        }\n        return s;\n    };\n","er":"    类型 = \".module-info-tag&&Text\";\n    导演 = \".module-info-item:matches(导演)&&Text\";\n    主演 = \".module-info-item:matches(主演|演员)&&Text\";\n    简介 = \".module-info-introduction-content&&Text\";\n\n    线路 = \".module-tab-items-box&&.tab-item\";\n    线名 = \"span&&Text\";\n\n    列表 = \"body&&.module-play-list\";\n    子列 = \"body&&a\";\n\n    名称 = \"a&&Text\";\n    链接 = \"a&&href\";\n\n    //二级链接为MY_URL\n    html = fetch(MY_URL);\n\n    var 推荐 = function(html) {\n        let list = [];\n        let contui = pdfa(html, \".module-poster-items-base&&.module-item:lt(9)\");\n        for (let i in contui) {\n            let li = contui[i];\n            list.push({\n                title: pdfh(li, \"a&&title\"),\n                desc: pdfh(li, \".module-item-note&&Text\"),\n                img: pd(li, \"img&&data-original\"),\n                url: pd(li, \"a&&href\")\n            })\n        };\n        return list;\n    };\n    ","so":"    //搜索链接为ssurl\n    let html = fetch(ssurl);\n\n    var 列表 = function(html) {\n        let list = pdfa(html, \".module-items&&.module-item\");\n        let f = [];\n        for (let i in list) {\n            let li = list[i];\n            f.push({\n                title: pdfh(li, \"img&&alt\"),\n                desc: pdfh(li, \".module-item-note&&Text\"),\n                img: pdfh(li, \"img&&data-original\"),\n                url: pdfh(li, \"a&&href\")\n            })\n        };\n        return f;\n    };\n","time":"2024-11-15T19:41:01","ttl":"","fbhost":"","gy":"","off":"1","gs":"JS"},{"name":"宝铂丽影院&&羽龑","host":"https://www.boburi.com/bbtype-1-----------.html","sourl":"https://www.boburi.com/vodsearch/**----------fypage---.html","sy":"    标题1 = \"h3:matches(电影)&&Text\";\n    标题2 = \"h3:matches(剧集)&&Text\";\n    标题3 = \"h3:matches(动漫)&&Text\";\n    标题4 = \"h3:matches(综艺)&&Text\";\n    标题5 = \"h3:matches(短剧)&&Text\";\n    标题6 = \"h3:matches(解说)&&Text\";\n\n    列表1 = \".stui-vodlist,0&&li:lt(15)\";\n    列表2 = \".stui-vodlist,1&&li:lt(15)\";\n    列表3 = \".stui-vodlist,3&&li:lt(15)\";\n    列表4 = \".stui-vodlist,2&&li:lt(15)\";\n    列表5 = \".stui-vodlist,4&&li:lt(15)\";\n    列表6 = \".stui-vodlist,5&&li:lt(15)\";\n\n    html = fetch(MY_URL);\n\n    var 列表 = function(list) {\n        let l = [];\n        for (let j of list) {\n            let li = j;\n            let lists = [];\n            for (let i in li) {\n                let img = pd(li[i], \"a&&data-original\");\n                let title = pdfh(li[i], \"a&&title\");\n                let url = pd(li[i], \"a&&href\");\n                let desc = pdfh(li[i], \".pic-text&&Text\");\n                lists.push(title + '$' + desc + '$' + img + '$' + url);\n            }\n            l.push(lists);\n        };\n        return l;\n    };","fl":"    电影 = MY_URL;\n    剧集 = MY_URL.replace(/1/, \"2\");\n    动漫 = MY_URL.replace(/1/, \"4\");\n    综艺 = MY_URL.replace(/1/, \"3\");\n    短剧 = MY_URL.replace(/1/, \"18\");\n\n    let tr_url = getMyVar(\"Myurl.url\", MY_URL);\n\n    if (/\\/?([\\w\\d]+|)-.*?-.*?-.*?-.*?-.*?-.*?-.*?-\\d*---\\d*(\\.html|\\/$)/.test(MY_URL)) {\n        true_url = tr_url.replace(/---\\.html/, page + '---.html').replace(/---(\\d+)\\.html/, page + '---$1.html').replace(/---\\//, page + '---/').replace(/---(\\d+)\\//, page + '---$1/');\n    } else\n    if (/((\\/(\\w*)show)?((\\/|-)[\\w\\d%])?(\\/area\\/[\\w\\d%]+)?(\\/by\\/[\\w\\d%]+)?(\\/id\\/\\d+)?(\\/letter\\/[\\w\\d%]+)?)(\\/page\\/\\d+)?(\\/year\\/\\d+)?(\\.html|\\/$)/.test(MY_URL)) {\n        true_url = /\\/year\\//.test(tr_url) ? tr_url.replace(/year\\/(\\d+).html/, 'page/' + page + '/year/$1.html').replace(/year\\/(\\d+)\\//, 'page/' + page + '/year/$1/') : /\\/$/.test(tr_url) ? tr_url + 'page/' + page + '/' : tr_url.replace(/\\.html/, '/page/' + page + '.html');\n    } else\n    if (/vod-show-id|vodtype\\//.test(MY_URL)) {\n        true_url = tr_url.replace(/vodtype\\/(\\d+)\\.html/, 'vodtype/$1/page/' + page + '.html').replace(/\\-id\\-(\\d+)/, \"-id-$1-page-\" + page);\n    }; //log(true_url);\n\n\n    大类 = \"body&&.stui-screen__list\";\n    小类 = \"body&&.nav-head\";\n    子类 = \"body&&a:not(:matches(重置|首页|app|APP|热榜|发布|周表))\";\n\n    大名 = \"a&&Text\";\n    大链 = \"a&&href\";\n    小名 = \"a&&Text\";\n    小链 = \"a&&href\";\n\n    html = fetch(true_url);\n\n    var 列表 = function(html) {\n        let list = pdfa(html, \".stui-vodlist&&li\");\n        let s = [];\n        for (let i in list) {\n            let li = list[i];\n            s.push({\n                title: pdfh(li, \"a&&title\"),\n                desc: pdfh(li, \".pic-text&&Text\"),\n                img: pd(li, \".lazyload&&data-original\"),\n                url: pd(li, \"a&&href\")\n            })\n        }\n        return s;\n    };","er":"    类型 = \".stui-pannel_bd&&p:matches(电影类别)&&Text\";\n    导演 = \".stui-content__detail&&p:matches(导演)&&Text\";\n    主演 = \".stui-content__detail&&p:matches(主演|演员)&&Text\";\n    简介 = \"#desc&&.col-pd&&Text\";\n\n    线路 = \".col-lg-wide-75&&.playlist\";\n    线名 = \"h3&&Text\";\n\n    列表 = \".col-lg-wide-75&&.stui-content__playlist\";\n    子列 = \"ul&&li:not(.visible-xs)\";\n\n    名称 = \"a&&Text\";\n    链接 = \"a&&href\";\n\n    //二级链接为MY_URL\n    html = fetch(MY_URL);\n\n    var 推荐 = function(html) {\n        let list = [];\n        let contui = pdfa(html, \".stui-vodlist&&li\");\n        for (let i in contui) {\n            let li = contui[i];\n            list.push({\n                title: pdfh(li, \"h1&&Text\"),\n                desc: pdfh(li, \".pic-text&&Text\"),\n                img: pd(li, \"img&&data-original\"),\n                url: pd(li, \"a&&href\")\n            })\n        };\n        return list;\n    };\n    ","so":"    let html = fetch(ssurl);\n\n    var 列表 = function(html) {\n        let list = pdfa(html, \"body&&.stui-vodlist__media&&li\");\n        let f = [];\n        for (let i in list) {\n            let li = list[i];\n            f.push({\n                title: pdfh(li, \"a&&title\"),\n                desc: pdfh(li, \".pic-text&&Text\"),\n                img: pdfh(li, \".lazyload&&data-original\"),\n                url: pdfh(li, \"a&&href\")\n            })\n        };\n        return f;\n    };","time":"2024-11-15T19:21:37","ttl":"","fbhost":"","gy":"","off":"1","gs":"JS"},{"name":"闪雷电影院&&莲新","host":"http://120.224.7.90:808/www/List.asp?Classid=5000","sourl":"http://120.224.7.90:808/www/List.asp?classid=30&searchword=GBK**&page=fypage","sy":"    标题1 = \"最近更新\";\r\n    标题2 = \"电影\";\r\n    标题3 = \"电视剧\";\r\n    标题4 = \"综艺\";\r\n    标题5 = \"动漫\";\r\n\r\n    列表1 = \"body&&div,14&&li:lt(6)\";\r\n    列表2 = \"body&&div,25&&li:lt(9)\";\r\n    列表3 = \"body&&div,31&&li:lt(9)\";\r\n    列表4 = \"body&&div,37&&li:lt(9)\";\r\n    列表5 = \"body&&div,43&&li:lt(9)\";\n    \n    轮播 = \"禁用\";\r\n\r\n    html = request(MY_URL+'/www/index.asp', {headers: {    \n'Content-Type':'charset=gb2312',\n'Referer': 'http://36.56.71.96:18008/www/list.asp?Classid=5000',\r\n        },'timeout': 15000});\n        \n    var 样式 = function(title) {\n        return \"movie_3_marquee\";\n    };\n        \r\n    //console.log(html);\r\n    var 列表 = function(list) {        \r\n        let l = [];\r\n        for (let j of list) {\r\n            let li = j;\r\n            let lists = [];\r\n            for (let i in li) {\r\n                let pic = pdfh(li[i], \"img&&src\");\r\n                let img = /.*url=|.*tu=/.test(pic) ? pic.replace(/.*url=|.*tu=/, \"\") : (/http|pic|jpg|png|jpeg|\\//.test(pic)) ? pd(li[i], \"img&&src\") : \"hiker://images/home_bg\";\r\n                let title = pdfh(li[i], \"a&&title\");\r\n                let url = MY_URL+'/www/'+pdfh(li[i], \"a&&href\");\r\n                let desc = pdfh(li[i], \"span,1&&Text\");\r\n                lists.push(title + '$' + desc + '$' + img + '$' + url);\n                console.log(url);         \r\n            }\r\n            l.push(lists);\r\n        };\r\n        return l;\r\n    };\r\n","fl":"    let tr_url = getMyVar(\"Myurl.url\", MY_URL);\n    //console.log(tr_url);\n\n    if (tr_url) {\n        true_url = tr_url + '&page=' + page\n    };\n\n    大类 = \"body&&ul,0:4\";\n    小类 = \"\";\n    子类 = \"body&&a:not(:matches(首页|留言|求片|音乐))\";\n\n    大名 = \"a&&Text\";\n    大链 = \"a&&href\";\n    小名 = \"a&&Text\";\n    小链 = \"a&&href\";\n\n    html = fetch(true_url, {\n        headers: {\n            'Content-Type': 'charset=GBK'\n        }\n    });\n    var 列表 = function(html) {\n        let list = pdfa(html, \"ul,5&&strong\");\n\n        let s = [];\n        for (let i in list) {\n            let li = list[i];\n            s.push({\n                title: pdfh(li, \"a&&title\"),\n                desc: pdfh(li, \"span,1&&Text\"),\n                img: pd(li, \"img&&src\"),\n                url: pd(li, \"a&&href\")\n            })\n        }\n        return s;\n    };\n","er":"    类型 = \"ul,2&&li,2&&Text\";\n    导演 = \"ul,2&&li,4&&Text\";\n    主演 = \"ul,2&&li,1&&Text\";\n    简介 = \"body&&div:has(p),3&&Text\";\n\n    线路 = \"body&&div:has(p),2&&p\";\n    线名 = \"body&&Text\";\n\n    列表 = \"body&&div:has(p),2&&ul\";\n    子列 = \"body&&li\";\n\n    名称 = \"a&&Text\";\n    链接 = \"a&&onclick\";\n\n    //二级链接为MY_URL\n    html = fetch(MY_URL, {\n        headers: {\n            'Content-Type': 'charset=GBK'\n        }\n    });\n\n    var 推荐 = function(html) {\n        return \"\";\n    };","so":"    //搜索链接为ssurl\n    let html = fetch(ssurl, {\n        headers: {\n            'Content-Type': 'charset=GBK'\n        }\n    })\n    //console.log(ssurl);\n    //console.log(html);\n    var 列表 = function(html) {\n        let list = pdfa(html, \"ul,5&&strong\");\n        let f = [];\n        for (let i in list) {\n            let li = list[i];\n            f.push({\n                title: pdfh(li, \"a&&title\"),\n                desc: pdfh(li, \"span,1&&Text\"),\n                img: pd(li, \"img&&src\", ssurl),\n                url: pd(li, \"a&&href\", ssurl)\n            })\n        };\n        return f;\n    };\n","time":"2024-11-15T19:15:33","ttl":"","fbhost":"","gy":"{\n    \"免嗅\": function(input) {\n\n        var html = 'http://120.224.7.90:808/PlayMov.asp?ClassId=' + input.split(\",\")[2] + '&video=2&exe=0&down=0&movNo=' + input.split(\",\")[3] + '&vgver=undefined&ClientIP=120.224.7.90'\n        var url = request(html).match(/push\\('(.*?)'/)[1]\n        return url;\n    }\n}","off":"1","gs":"JS"},{"name":"剧圈圈&&随风","host":"https://www.jqqzx.cc/vodshow/id/dianying.html","sourl":"https://www.jqqzx.cc/vodsearch**/page/fypage.html","sy":"    标题1 = \"h2:matches(热门)&&Text\";\n    标题2 = \"h2:matches(电影)&&Text\";\n    标题3 = \"h2:matches(剧集)&&Text\";\n    标题4 = \"h2:matches(动漫)&&Text\";\n    标题5 = \"h2:matches(综艺)&&Text\";\n    标题6 = \"h2,5&&Text\";\n\n    列表1 = \".module,0&&.scroll-box&&a:lt(6)\";\n    列表2 = \".module,1&&.tab-list&&a:lt(9)\";\n    列表3 = \".module,2&&.tab-list&&a:lt(9)\";\n    列表4 = \".module,3&&.tab-list&&a:lt(9)\";\n    列表5 = \".module,4&&.tab-list&&a:lt(9)\";\n    列表6 = \".module,5&&.tab-list&&a:lt(9)\";\n\n    轮播 = \"禁用\";\n    \n    \n    html = fetch(MY_URL);\n\n    var 样式 = function(title) {\n        return \"movie_3_marquee\";\n    };\n\n    var 列表 = function(list) {\n        let l = [];\n        for (let j of list) {\n            let li = j;\n            let lists = [];\n            for (let i in li) {\n                let pic = pdfh(li[i], \"img&&data-original\");\n                let img = /.*url=|.*tu=/.test(pic) ? pic.replace(/.*url=|.*tu=/, \"\") : (/http|pic|jpg|png|jpeg|\\//.test(pic)) ? pd(li[i], \"img&&data-original\") : \"hiker://images/home_bg\";\n                let title = pdfh(li[i], \"a&&title\");\n                let url = pd(li[i], \"a&&href\");\n                let desc = pdfh(li[i], \".module-item-note&&Text\");\n                lists.push(title + '$' + desc + '$' + img + '$' + url);\n            }\n            l.push(lists);\n        };\n        return l;\n    };","fl":"    电影 = MY_URL;\n    剧集 = MY_URL.replace(/dianying/, \"juji\");\n    动漫 = MY_URL.replace(/dianying/, \"dongman\");\n    综艺 = MY_URL.replace(/dianying/, \"zongyi\");\n\n    let tr_url = getMyVar(\"Myurl.url\", MY_URL);\n\n    if (/\\/?([\\w\\d]+|)-.*?-.*?-.*?-.*?-.*?-.*?-.*?-\\d*---\\d*(\\.html|\\/$)/.test(MY_URL)) {\n        true_url = tr_url.replace(/---\\.html/, page + '---.html').replace(/---(\\d+)\\.html/, page + '---$1.html').replace(/---\\//, page + '---/').replace(/---(\\d+)\\//, page + '---$1/');\n    } else\n    if (/((\\/(\\w*)show)?((\\/|-)[\\w\\d%])?(\\/area\\/[\\w\\d%]+)?(\\/by\\/[\\w\\d%]+)?(\\/id\\/\\d+)?(\\/letter\\/[\\w\\d%]+)?)(\\/page\\/\\d+)?(\\/year\\/\\d+)?(\\.html|\\/$)/.test(MY_URL)) {\n        true_url = /\\/year\\//.test(tr_url) ? tr_url.replace(/year\\/(\\d+).html/, 'page/' + page + '/year/$1.html').replace(/year\\/(\\d+)\\//, 'page/' + page + '/year/$1/') : /\\/$/.test(tr_url) ? tr_url + 'page/' + page + '/' : tr_url.replace(/\\.html/, '/page/' + page + '.html');\n    } else\n    if (/vod-show-id|vodtype\\//.test(MY_URL)) {\n        true_url = tr_url.replace(/vodtype\\/(\\d+)\\.html/, 'vodtype/$1/page/' + page + '.html').replace(/\\-id\\-(\\d+)/, \"-id-$1-page-\" + page);\n    }; //log(true_url);\n\n\n    大类 = \"body&&.swiper-wrapper\";\n    小类 = \"body&&.scroll-box\";\n    子类 = \"body&&a:not(:matches(重置|首页|app|APP|热榜|发布|周表))\";\n\n    大名 = \"a&&Text\";\n    大链 = \"a&&href\";\n    小名 = \"a&&Text\";\n    小链 = \"a&&href\";\n\n    var 换大链 = function(text) {\n        return text.replace(/type/g, \"vodshow/id\");\n    };\n\n    html = fetch(true_url);\n\n    var 列表 = function(html) {\n        let list = pdfa(html, \".module-items&&.module-item\");\n        let s = [];\n        for (let i in list) {\n            let li = list[i];\n            s.push({\n                title: pdfh(li, \"a&&title\"),\n                desc: pdfh(li, \".module-item-note&&Text\"),\n                img: pd(li, \"img&&data-original\"),\n                url: pd(li, \"a&&href\")\n            })\n        }\n        return s;\n    };","er":"    类型 = \".module-info-tag&&Text\";\n    导演 = \".module-info-item:matches(导演)&&Text\";\n    主演 = \".module-info-item:matches(主演|演员)&&Text\";\n    简介 = \".module-info-introduction-content&&Text\";\n\n    线路 = \".module-tab-items-box&&.tab-item\";\n    线名 = \"span&&Text\";\n\n    列表 = \"body&&.module-play-list\";\n    子列 = \"body&&a\";\n\n    名称 = \"a&&Text\";\n    链接 = \"a&&href\";\n\n    //二级链接为MY_URL\n    html = fetch(MY_URL);\n\n    var 推荐 = function(html) {\n        let list = [];\n        let contui = pdfa(html, \".module-poster-items-base&&.module-item:lt(9)\");\n        for (let i in contui) {\n            let li = contui[i];\n            list.push({\n                title: pdfh(li, \"a&&title\"),\n                desc: pdfh(li, \".module-item-note&&Text\"),\n                img: pd(li, \"img&&data-original\"),\n                url: pd(li, \"a&&href\")\n            })\n        };\n        return list;\n    };","so":"    //搜索链接为ssurl\n    html = fetch(ssurl);\n    \n    var 列表 = function(html) {\n        let list = pdfa(html, \".module-items&&.module-item\");\n        let f = [];\n        for (let i in list) {\n            let li = list[i];\n            f.push({\n                title: pdfh(li, \"img&&alt\"),\n                desc: pdfh(li, \".module-item-note&&Text\"),\n                img: pdfh(li, \"img&&data-original\"),\n                url: pdfh(li, \"a&&href\")\n            })\n        };\n        return f;\n    };","time":"2024-11-15T16:29:34","ttl":"","fbhost":"","gy":"{\n    \"数字\": function(html) {\n        return /验证码/.test(html)\n    },\n    \"免嗅\": function(input) {\n        MY_HOME = getHome(input);\n        var html = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\n        var url = html.url;\n        if (html.encrypt == '1') {\n            url = unescape(url);\n        } else if (html.encrypt == '2') {\n            url = unescape(base64Decode(url));\n        }\n        if (/m3u8/.test(url)) {\n            return url\n        } else {\n            eval(request(MY_HOME + '/static/js/playerconfig.js'));\n            var jx = MacPlayerConfig.player_list[html.from].parse;\n            if (jx == '') {\n                jx = MacPlayerConfig.parse;\n            }\n\n            function _0xe2a440(_0x1fa139) {\n                var _0x1fa139 = _0x241571(_0x1fa139);\n                var _0x17bd14 = _0x1fa139.split(\"/\");\n                var _0xaefa58 = \"\";\n                for (var _0x2d9357 = 0; _0x2d9357 < _0x17bd14.length; _0x2d9357++) {\n                    var _0x501b5f = _0x2d9357 + 1 == _0x17bd14.length ? \"\" : \"/\";\n                    if (_0x2d9357 == 0 || _0x2d9357 == 1) {} else {\n                        _0xaefa58 += _0x17bd14[_0x2d9357] + _0x501b5f;\n                    }\n                }\n                var _0x28094f = base64Decode(_0xaefa58);\n                var _0x72d7e1 = _0x47b765(JSON.parse(base64Decode(_0x17bd14[1])), JSON.parse(base64Decode(_0x17bd14[0])), _0x28094f);\n                return _0x72d7e1;\n            }\n\n            function _0xf22dc6(_0xe35cdf, _0x4d70fb) {\n                for (var _0x1ed04f = 0; _0x1ed04f < _0xe35cdf.length; _0x1ed04f++) {\n                    if (_0x4d70fb === _0xe35cdf[_0x1ed04f]) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n\n            function _0x241571(_0x518f7a) {\n                key = md5(\"test\");\n                _0x518f7a = base64Decode(_0x518f7a);\n                len = key.length;\n                code = \"\";\n                for (i = 0; i < _0x518f7a.length; i++) {\n                    k = i % len;\n                    code += String.fromCharCode(_0x518f7a.charCodeAt(i) ^ key.charCodeAt(k));\n                }\n                return base64Decode(code);\n            }\n\n            function _0x47b765(_0x235332, _0x522cd7, _0x35e619) {\n                var _0x1dcddb = \"\";\n                var _0x4e1939 = _0x235332;\n                var _0x1aa6a7 = _0x522cd7;\n                var _0x3bad8c = _0x35e619.split(\"\");\n                for (var _0x1b6f7c = 0; _0x1b6f7c < _0x3bad8c.length; _0x1b6f7c++) {\n                    var _0x854f64 = _0x3bad8c[_0x1b6f7c];\n                    var _0x3797f4 = /^[a-zA-Z]+$/.test(_0x854f64);\n                    if (_0x3797f4 && _0xf22dc6(_0x1aa6a7, _0x854f64)) {\n                        _0x1dcddb += _0x1aa6a7[_0x4e1939.indexOf(_0x854f64)];\n                    } else {\n                        _0x1dcddb += _0x854f64;\n                    }\n                }\n                return _0x1dcddb;\n            }\n            let vid = 'vid=' + url\n\n            let u = JSON.parse(request(jx.replace('webcloud.php?vid=', 'api.php'), {\n                body: vid,\n                method: 'POST'\n\n            })).data.url\n            //log(u)\n\n            let play = _0xe2a440(u)\n            log(play)\n            return play\n        }\n    }\n}","off":"1","gs":"JS"},{"name":"旺旺影视&&莲新","host":"let html = fetch(\"https://m.emsdn.cn\");\nlet list = pdfa(html, \"body&&p:matches(wwgz)\");\n\nlet url = [];\nif(!list){\nfor (let i of list) {\n      let j = pdfh(i, \"a&&Text\")\n            if (!j.startsWith('http')) {\n                url.push( 'https://' + j )\n            }\n    console.log(url);\n};\n\nlet host = [];\nlet urls = url;\n\nfor (let i = 0; i < urls.length; i++) {\n    let Code = JSON.parse(fetch(urls[i], {\n    withStatusCode: true,\n    timeout: 5000\n})).statusCode;\n    if (Code == 200) {\nhost.push(urls[i] + \"/vod-type-id-1-pg-1.html\")\n        console.log(\"找到目标值: \" + Code + \", 循环停止。\");\n        break;\n    };\n};\n//console.log(host[0]);\nreturn host[0]\n}else{\n    return \"https://www.wwgz.cn/vod-type-id-1-pg-1.html\";\n    }","sourl":"SURL/vod-search-pg-fypage-wd-**.html","sy":"    标题1 = \".item-title,0&&Text\";\n    标题2 = \".item-title,1&&Text\";\n    标题3 = \".item-title,2&&Text\";\n    标题4 = \".item-title,3&&Text\";\n    标题5 = \".item-title,4&&Text\";\n    //标题6 = \"h2,5&&Text\";\n\n    列表1 = \".mod,0&&ul:lt(9)\";\n    列表2 = \".mod,1&&li:lt(9)\";\n    列表3 = \".mod,2&&li:lt(9)\";\n    列表4 = \".mod,3&&li:lt(9)\";\n    列表5 = \".mod,4&&li:lt(9)\";\n    //列表6 = \".resize_list&&li&&a:lt(9)\";\n    \n    轮播 = \".swiper-wrapper,1&&.swiper-slide\";\n    \n    \n    \n    html = fetch(MY_URL);\n    \n    var 样式 = function(title) {\n        return \"movie_3_marquee\";\n    };\n\n    var 列表 = function(list) {\n        \n        let l = [];\n        for (let j of list) {\n            let li = j;\n            let lists = [];\n            for (let i in li) {\n                let pic = pdfh(li[i], \"img&&src||data-src\");\n                let img = /.*url=|.*tu=/.test(pic) ? pic.replace(/.*url=|.*tu=/, \"\") : (/http|pic|jpg|png|jpeg|\\//.test(pic)) ? pd(li[i], \"img&&src||data-src\") : \"hiker://images/home_bg\";\n                let title = pdfh(li[i], \"a&&title\");\n                let url = pd(li[i], \"a&&href\");\n                let desc = pdfh(li[i], \".sBottom&&Text\").replace(/\\d*\\.\\d*/,'') ? pdfh(li[i], \".sBottom&&Text\").replace(/\\d*\\.\\d*/,'') : pdfh(li[i], \".sBottom&&Text\");\n                lists.push(title + '$' + desc + '$' + img + '$' + url);\n            }\n            l.push(lists);\n        };\n        return l;\n    };\n    ","fl":"    电影 = MY_URL;\r\n    剧集 = MY_URL.replace(/-id-1/, \"-id-2\");\r\n    动漫 = MY_URL.replace(/-id-1/, \"-id-4\");\r\n    综艺 = MY_URL.replace(/-id-1/, \"-id-5\");\r\n\r\n    let tr_url = getMyVar(\"Myurl.url\", MY_URL);\r\n    if (/\\/?([\\w\\d]+|)-.*?-.*?-\\d*-.*?-\\d*(\\.html|\\/$)/.test(MY_URL)) {\r\n        tr_url = tr_url.replace(/-type-/, '-list-').replace(/pg-(\\d+).html/, 'pg-' + page + '-order--by--class--year--letter--area--lang-.html');\r\n    }\r\n    if (tr_url) {\r\n\r\n        true_url = tr_url.replace(/-pg-(\\d+)/, '-pg-' + page);\r\n    }\r\n\r\n    大类 = \"body&&.con\";\r\n    小类 = \"\";\r\n    子类 = \"body&&a\";\r\n    大名 = \"a&&Text\";\r\n    大链 = \"a&&href\";\r\n    小名 = \"a&&Text\";\r\n    小链 = \"a&&href\";\r\n\r\n    html = fetch(true_url);\r\n    //console.log(true_url)\r\n    var 列表 = function(html) {\r\n        let list = pdfa(html, \"body&&.resize_list&&li\");\r\n        let s = [];\r\n        for (let i in list) {\r\n            let li = list[i];\r\n\r\n            s.push({\r\n                title: pdfh(li, \"a&&title\"),\r\n                desc: pdfh(li, \".sBottom&&Text\").replace(/\\d*\\.\\d*/, '') ? pdfh(li, \".sBottom&&Text\").replace(/\\d*\\.\\d*/, '') : pdfh(li, \".sBottom&&Text\"),\r\n                img: pd(li, \"img&&src\"),\r\n                url: pd(li, \"a&&href\")\r\n            })\r\n        }\r\n        return s;\r\n    };","er":"    类型 = \".d_z_y:matches(类型)&&Text\";\n    导演 = \".d_z_y:matches(导演)&&Text\";\n    主演 = \".d_z_y:matches(主演|演员)&&Text\";\n    简介 = \"body&&.jjie&&Text\";\n\n    线路 = \"body&&.block_ku\";\n    线路 = \".soybox&&Text\";\n\n    列表 = \"body&&.soyurl\";\n    子列 = \"ul&&a\";\n\n    名称 = \"a&&Text\";\n    链接 = \"a&&href\";\n\n    //二级链接为MY_URL\n    html = fetch(MY_URL);\n\n    var 推荐 = function(html) {\n        let list = [];\n        let contui = pdfa(html, \"body&&.list_06&&li\");\n        for (let i in contui) {\n            let li = contui[i];\n            list.push({\n                title: pdfh(li, \"a&&title\"),\n                desc: pdfh(li, \".f_c&&Text\"),\n                img: pd(li, \"img&&src\"),\n                url: pd(li, \"a&&href\")\n            })\n        };\n        //console.log(html);\n        return list;\n    };","so":"    //搜索链接为ssurl\n    let html = fetch(ssurl);\n    //console.log(ssurl);\n    var 列表 = function(html) {\n        let list = pdfa(html, \"body&&.ulPicTxt&&li\");\n        let f = [];\n        for (let i in list) {\n            let li = list[i];\n            f.push({\n                title: pdfh(li, \".sTit&&Text\"),\n                desc: pdfh(li, \".sStyle&&Text\") +'   ' +pdfh(li, \".sDes,1&&Text\")+'\\n' +pdfh(li, \".sDes&&Text\"),\n                img: pdfh(li, \"img&&src\"),\n                url: pdfh(li, \"a&&href\")\n            })\n        };\n        return f;\n    };","time":"2024-11-15T16:17:54","ttl":"","fbhost":"https://www.wwgz.cn/vod-type-id-1-pg-1.html","gy":"{\n    \"免嗅\": function(input) {\n        var htm = fetch(input, {\n            headers: {\n                'Referer': MY_HOME,\n            }\n        });\n        var mac_url = htm.match(/mac_url\\s*=\\s*'(.*?)'/)[1];\n        var mac_from = htm.match(/mac_from\\s*=\\s*'(.*?)'/)[1];\n        if (mac_from == 'relay') {\n            var jx = \"https://api.cnmcom.com/webcloud/play/bjx010.php?url=\";\n        } else if (mac_from == 'lzm3u8') {\n            var jx = \"https://api.cnmcom.com/webcloud/m3u8.php?url=\";\n        };\n        let text = pdfh(htm, '.bd&&ul&&.active&&Text');\n\n        var co = mac_url.match(`${text}\\\\$([^#]+)#?`)[1];\n        //console.log(list);\n\n        var html = fetch(jx + co, {\n            header: {\n                'X-Requested-With': 'XMLHttpRequest',\n                'Accept': '*/*'\n            }\n        });\n        try {\n            var video = html.match(/video:\\s*{url:\\s*'(.*?)'/)[1];\n        } catch (e) {\n            var video = html.match(/var\\s*url='(.*?)'/)[1];\n        }\n        console.log(video);\n        return video;\n    }\n}","off":"1","gs":"JS"},{"name":"永乐视频&&随风","host":"https://www.ylys.tv/vodshow/1-----------/","sourl":"SURL/vodsearch/**----------fypage---/","sy":"    标题1 = \"热映\";\n    标题2 = \"电影\";\n    标题3 = \"电视剧\";\n    标题4 = \"综艺\";\n    标题5 = \"动漫\";\n    \n    列表1 = \".module,0&&.module-items&&a:lt(4)\";\n    列表2 = \".module,1&&.module-items&&a:lt(9)\";\n    列表3 = \".module,2&&.module-items&&a:lt(9)\";\n    列表4 = \".module,3&&.module-items&&a:lt(9)\";\n    列表5 = \".module,4&&.module-items&&a:lt(9)\";\n    \n    轮播 = \".swiper-big&&.swiper-slide\"\n\n    html = fetch(MY_URL);\n  \n   //console.log(html);\n    var 列表 = function(list) {\n     \n        let l = [];\n        for (let j of list) {\n            let li = j;\n            let lists = [];\n            for (let i in li) {\n                let pic = pdfh(li[i], \"img||.banner&&data-original||style\");\n                let img = /background/.test(pic) ? getHome(MY_URL) + pic.match(/url\\((.*?)\\)/)[1] : pd(li[i], \"img&&data-original\");\n                let title = pdfh(li[i], \".v-title||a&&title||Text\");\n                let url = pd(li[i], \"a&&href\");\n                let desc = pdfh(li[i], \".module-item-note||p&&Text\");\n                lists.push(title + '$' + desc + '$' + img + '$' + url);\n            }\n            \n            l.push(lists);\n        };\n        return l;\n    };\n    ","fl":"    var 标题 = {\n        \"电影\": MY_URL,\n        \"剧集\": MY_URL.replace(/\\/1/, \"/2\"),\n        \"综艺\": MY_URL.replace(/\\/1/, \"/3\"),\n        \"动漫\": MY_URL.replace(/\\/1/, \"/4\"),\n    };\n\n    let tr_url = getMyVar(\"Myurl.url\", MY_URL);\n\n    if (/\\/?([\\w\\d]+|)-.*?-.*?-.*?-.*?-.*?-.*?-.*?-\\d*---\\d*(\\.html|\\/$)/.test(MY_URL)) {\n        true_url = tr_url.replace(/---\\.html/, page + '---.html').replace(/---(\\d+)\\.html/, page + '---$1.html').replace(/---\\//, page + '---/').replace(/---(\\d+)\\//, page + '---$1/');\n    } else\n    if (/((\\/(\\w*)show)?((\\/|-)[\\w\\d%])?(\\/area\\/[\\w\\d%]+)?(\\/by\\/[\\w\\d%]+)?(\\/id\\/\\d+)?(\\/letter\\/[\\w\\d%]+)?)(\\/page\\/\\d+)?(\\/year\\/\\d+)?(\\.html|\\/$)/.test(MY_URL)) {\n        true_url = /\\/year\\//.test(tr_url) ? tr_url.replace(/year\\/(\\d+).html/, 'page/' + page + '/year/$1.html').replace(/year\\/(\\d+)\\//, 'page/' + page + '/year/$1/') : /\\/$/.test(tr_url) ? tr_url + 'page/' + page + '/' : tr_url.replace(/\\.html/, '/page/' + page + '.html');\n    };\n\n    大类 = \"body&&.scroll-box\";\n    小类 = \"\";\n    子类 = \"body&&a:not(:matches(重置|首页|app|APP|热榜|发布|周表|留言|排行|资讯|专题))\";\n\n    大名 = \"a&&Text\";\n    大链 = \"a&&href\";\n    小名 = \"a&&Text\";\n    小链 = \"a&&href\";\n\n    /*var 换大链 = function(url) {\n        return url.replace(/vodtype/g, \"vodshow\");\n    };*/\n\n\n    html = fetch(true_url);\n\n    var 列表 = function(html) {\n        let list = pdfa(html, \".module-items&&a\");\n        let s = [];\n        for (let i in list) {\n            let li = list[i];\n            s.push({\n                title: pdfh(li, \"a&&title\"),\n                desc: pdfh(li, \".module-item-note&&Text\"),\n                img: pd(li, \"img&&data-original\"),\n                url: pd(li, \"a&&href\")\n            })\n        }\n        return s;\n    };","er":"    类型 = \"body&&.module-info-tag&&Text\";\n    导演 = \"body&&.module-info-item:matches(导演)&&Text\";\n    主演 = \"body&&.module-info-item:matches(主演|演员)&&Text\";\n    简介 = \".module-info-introduction-content&&Text\";\n\n    线路 = \"body&&.tab-item\";\n    线名 = \"span&&Text\";\n\n    列表 = \"body&&.sort-list\";\n    子列 = \"body&&a\";\n\n    名称 = \"a&&Text\";\n    链接 = \"a&&href\";\n\n    //二级链接为MY_URL\n    html = fetch(MY_URL);\n\n    var 推荐 = function(html) {\n        let list = [];\n        let contui = pdfa(html, \".module-items&&a:lt(9)\");\n        for (let i in contui) {\n            let li = contui[i];\n            list.push({\n                title: pdfh(li, \"a&&title\"),\n                desc: pdfh(li, \".module-item-note&&Text\"),\n                img: pd(li, \"img&&data-original\"),\n                url: pd(li, \"a&&href\")\n            })\n        };\n        return list;\n    };","so":"    //搜索链接为ssurl\n    let html = fetch(ssurl);\n\n    var 列表 = function(html) {\n        let list = pdfa(html, \".module-items&&.module-item\");\n        //console.log(list);\n        let f = [];\n        for (let i in list) {\n            let li = list[i];\n            f.push({\n                title: pdfh(li, \"img&&alt\"),\n                desc: pdfh(li, \".module-item-note&&Text\"),\n                img: pd(li, \"img&&data-original\", ssurl),\n                url: pd(li, \"a&&href\", ssurl)\n            })\n        };\n        return f;\n    };","time":"2024-11-15T16:10:02","ttl":"","fbhost":"","gy":"","off":"1","gs":"JS"},{"name":"麻雀视频&&随风","host":"let html = fetch(\"https://www.mqtv.one/\");\nlet list = pdfa(html, \"#leo-pan-li&&li\");\nlet url = [];\nfor (let i of list) {\n    url.push(pd(i, \"a&&href\"))\n};\n\nlet host = [];\nlet urls = url;\nfor (let i = 0; i < urls.length; i++) {\n    let Code = JSON.parse(fetch(urls[i], {\n    withStatusCode: true,\n    timeout: 5000\n})).statusCode;\n    if (Code == 200) {\nhost.push(urls[i] + \"libs/VodList.api.php?type=movie&rank=rankhot&cat=&year=&area=&page=1\")\n        console.log(\"找到目标值: \" + Code + \", 循环停止。\");\n        break;\n    };\n};\nreturn host[0]","sourl":"SURL/libs/VodList.api.php?search=**","sy":"*","fl":"    var 标题 = {\n        \"电影\": MY_URL,\n        \"电视\": MY_URL.replace(/movie/, \"tv\"),\n        \"综艺\": MY_URL.replace(/movie/, \"va\"),\n        \"动漫\": MY_URL.replace(/movie/, \"ct\"),\n    };\n\n    let tr_url = getMyVar(\"Myurl.url\", MY_URL);\n\n    true_url = tr_url.replace(/page\\=1/, 'page=' + page);\n\n    html = fetch(true_url);\n\n    var 列表 = function(html) {\n        let list = JSON.parse(html).data || [];\n        let s = [];\n        for (let i in list) {\n            let li = list[i];\n            let cid = li.url.match(/.*\\/(\\d+)/)[1];\n            s.push({\n                title: li.title,\n                desc: li.remark,\n                img: li.img,\n                url: getHome(MY_URL) + \"/libs/VodInfo.api.php?ctid=\" + cid\n            })\n        }\n        return s;\n    };","er":"    html = fetch(MY_URL);\n    json = JSON.parse(html).data || [];\n    类型 = json.area + \" / \" + json.year;\n    导演 = json.director;\n    主演 = json.actor;\n    简介 = json.des;\n\n    线路 = json.playinfo;\n    线名 = function(title) {\n        return title.cnsite;\n    };\n\n    列表 = json.playinfo;\n    子列 = function(title) {\n        return title.player;\n    };\n\n    名称 = function(title) {\n        return title.no;\n    };\n\n    let api = \"https://\" + json.playapi[0].url.replace(/https/, \"\").replace(/\\:/, \"\").replace(/\\/\\//, \"\");\n    链接 = function(title) {\n        return api + title.url;\n    }; \n\n    var 推荐 = function(html) {\n        return \"\";\n    };","so":"    let html = fetch(ssurl);\n\n    var 列表 = function(html) {\n        let list = JSON.parse(html).data.vod_all[0].show || [];\n        let f = [];\n        for (let i in list) {\n            let li = list[i];\n            let cid = li.url.match(/.*\\/(\\d+)/)[1];\n            f.push({\n                title: li.title + \"\\n‘‘’’<small>\" + li.vodtype + \"/\" + li.areas + \"/\" + li.years + \"</small>\",\n                desc: li.remark + \"\\n\" + li.actors + \"\\n\" + li.cont,\n                img: li.img,\n                url: getHome(ssurl) + \"/libs/VodInfo.api.php?ctid=\" + cid\n            })\n        };\n        return f;\n    };","time":"2024-11-14T23:23:07","ttl":1,"fbhost":"","gy":"{\n    \"免嗅\": function(input) {\n        eval(getCryptoJS())\n\n        function decrypt(input) {\n            const sortByKey = (key, arr, callback) => {\n                let f = (a, b) => callback(a[key], b[key]);\n                return arr.sort(f);\n            }\n            var json = request(input, {\n                headers: {\n                    'Referer': input\n                }\n            })\n            eval(json.match(/var config = {[\\s\\S]*?}/)[0] + '}')\n            var _pr = pdfh(json, \"meta[name=\\\"viewport\\\"]&&id\").replace(\"now_\", \"\");\n            var _pu = pdfh(json, \"meta[charset=\\\"UTF-8\\\"]&&id\").replace(\"now_\", \"\");\n            let _puArr = [],\n                _newArr = [],\n                _code = '';\n            for (var i = 0; i < _pu.length; i++) {\n                _puArr.push({\n                    'id': _pu[i],\n                    'text': _pr[i]\n                });\n            }\n            _newArr = sortByKey(\"id\", _puArr, (a, b) => a - b);\n            for (var i = 0; i < _newArr.length; i++) {\n                _code += _newArr[i]['text'];\n            }\n            let vkey = CryptoJS.MD5(_code + \"lemon\").toString();\n            let key = CryptoJS.enc.Utf8.parse(vkey.substring(16));\n            let iv = CryptoJS.enc.Utf8.parse(vkey.substring(0, 16));\n            let decrypted = CryptoJS.AES.decrypt(config.url, key, {\n                iv: iv,\n                mode: CryptoJS.mode.CBC,\n                padding: CryptoJS.pad.Pkcs7\n            });\n            return decrypted.toString(CryptoJS.enc.Utf8);\n        }\n    }","off":"1","gs":"JS","sxtit":"无法访问"},{"name":"可可影视&&莲新","host":"let html = fetch(\"https://dl.keke12.com:51111/index.html\");\n\nlet list = pdfa(html, \"body&&.section-row-rSide\");\nlet url = [];\nfor (let i of list) {\n    url.push(pd(i, \"a&&data-clipboard-text||href\"))\n};\n\nlet host = [];\nlet urls = url;\nfor (let i = 0; i < urls.length; i++) {\n    let Code = JSON.parse(fetch(urls[i], {\n    withStatusCode: true,\n    timeout: 5000\n})).statusCode;\n    if (Code == 200) {\nhost.push(urls[i] + \"/show/1------.html\")\n        console.log(\"找到目标值: \" + Code + \", 循环停止。\");\n        break;\n    };\n};\n//console.log(host[0]);\nreturn host[0]\n\n","sourl":"SURL/search?k=**&page=fypage","sy":"    标题1 = \".section-header-title:matches(最近更新)&&Text\";\n    标题2 = \".section-header-title:matches(近期热门电影)&&Text\";\n    标题3 = \".section-header-title:matches(近期热门剧集)&&Text\";\n    标题4 = \".section-header-title:matches(近期热门日韩剧)&&Text\";\n    标题5 = \".section-header-title:matches(热播动漫)&&Text\";\n    标题6 = \".section-header-title:matches(热播综艺纪录)&&Text\";\n\n    列表1 = \".section-box,3&&.module-box&&.module-item:lt(6)\";\n    列表2 = \".section-box,0&&.module-box&&.module-item:lt(6)\";\n    列表3 = \".section-box,2&&.module-box&&.module-item:lt(6)\";\n    列表4 = \".section-box,4&&.module-box&&.module-item:lt(6)\";\n    列表5 = \".section-box,8&&.module-box&&.module-item:lt(6)\";\n    列表6 = \".section-box,9&&.module-box&&.module-item:lt(6)\";\n    \n    轮播 =\".carousel-box&&.swiper-wrapper&&.swiper-slide\";\n\n    html = fetch(MY_URL);\n    \n   var 样式 = function(title) {\n        return \"movie_3_marquee\";\n    };\n   \n    var 列表显示 = function(list) {\n        //console.log(list);\n        let l = [];\n        for (let j of list) {\n            let li = j;\n            let lists = [];\n            for (let i in li) {\n                let img = \"https://61.147.93.252:15002\"+pdfh(li[i], \"img,1||img&&data-original\");\n                //let img = /.*url=|.*tu=/.test(pic) ? pic.replace(/.*url=|.*tu=/, \"\") : (/http|pic|jpg|png|jpeg|\\//.test(pic)) ? \"https://61.147.93.252:15002\"+pdfh(li[i], \"img,1||img&&data-original\") : \"hiker://images/home_bg\";\n                let title = pdfh(li[i], \".v-item-title,1||.carousel-item-title&&Text\");\n                let url = pd(li[i], \"a&&href\");\n                let desc = pdfh(li[i], \".v-item-bottom||.carousel-item-tags&&span:not(:matches(kk))&&Text\");\n                lists.push(title + '$' + desc + '$' + img + '$' + url);\n                console.log(img);\n            }\n            \n            l.push(lists);\n        };\n        return l;\n    };\n    ","fl":"     var 标题 = {\n        \"电影\": MY_URL,\n        \"连续剧\": MY_URL.replace(/\\/1/, \"/2\"),\n        \"动漫\": MY_URL.replace(/\\/1/, \"/3\"),\n        \"综艺记录\": MY_URL.replace(/\\/1/, \"/4\"),\n        \"短剧\": MY_URL.replace(/\\/1/, \"/6\"),\n    };\n\n    let tr_url = getMyVar(\"Myurl.url\", MY_URL);\n    //console.log(tr_url)\n    if (/\\/show/.test(MY_URL)) {\n        true_url = tr_url.replace(/-\\.html/, page + '.html').replace(/(\\d+)\\.html/, page + '.html');\n    } else\n    if (/\\/channel/.test(MY_URL)) {\n        true_url = tr_url.replace(/channel\\/(\\d+)\\.html/, 'show/$1/------' + page + '.html');\n    }; //log(true_url);\n\n\n    大类 = \"body&&.filter-box&&.filter-row\";\n    小类 = \"\";\n    子类 = \"body&&a:not(:matches(今日|首页|Netflix|APP|专题|排行榜|留言))\";\n\n    大名 = \"a&&Text\";\n    大链 = \"a&&href\";\n    小名 = \"a&&Text\";\n    小链 = \"a&&href\";\n\n    var 换大链 = function(text) {\n        return text.replace(/channel\\/(\\d+)\\.html/g, \"show/$1------.html\");\n    };\n    //console.log(true_url);\n    html = fetch(true_url);\n    \n    var 列表 = function(html) {\n        let list = pdfa(html, \".module-box&&.module-item\");\n        let s = [];\n        for (let i in list) {\n            let li = list[i];\n            s.push({\n                title: pdfh(li, \".v-item-title,1&&Text\"),\n                desc: pdfh(li, \".v-item-bottom&&span,1&&Text\"),\n                img: \"https://61.147.93.252:15002\"+pdfh(li, \"img,1&&data-original\"),\n                url: pd(li, \"a&&href\")\n            })\n        }\n        return s;\n    };","er":"    类型 = \".detail-tags&&Text\",\n    导演 = \".detail-info-row:matches(导演)&&Text\",\n    主演 = \".detail-info-row:matches(主演|演员)&&Text\",\n    简介 = \".detail-desc&&Text\",\n    线路 = \".episode-box-header&&.source-swiper-slide\",\n    线名 = \"span,1&&Text\",\n    列表 = \"body&&.episode-list\",\n    子列 = \"body&&a\",\n    名称 = \"a&&Text\",\n    链接 = \"a&&href\",\n    html = fetch(MY_URL),\n    推荐 = function(html) {\n        let list = [];\n        let contui = pdfa(html, \".module-box&&.module-item:lt(9)\");\n        for (let i in contui) {\n            let li = contui[i];\n            list.push({\n                title: pdfh(li, \".v-item-title,1&&Text\"),\n                desc: pdfh(li, \".v-item-bottom&&span,1&&Text\"),\n                img: \"https://61.147.93.252:15002\" + pdfh(li, \"img,1&&data-original\"),\n                url: pd(li, \"a&&href\")\n            })\n        };\n        return list;\n    };","so":"    //搜索链接为ssurl\n    let html = fetch(ssurl);\n\n    var 列表 = function(html) {\n        let list = pdfa(html, \"body&&.search-result-item\");\n        console.log(list);\n        let f = [];\n        for (let i in list) {\n            let li = list[i];\n            f.push({\n                title: pdfh(li, \".title,1&&Text\")+\"\\n‘‘’’<small>\" + pdfh(li, \".tags&&Text\")+\"</small>\" ,\n                desc:  pdfh(li, \".actors&&span&&Text\") + '\\n' +pdfh(li, \".desc&&Text\"),\n                img: \"https://61.147.93.252:15002\"+pdfh(li, \"img,1&&data-original\"),\n                url: pdfh(li, \"a&&href\")\n            })\n        };\n        return f;\n    };","time":"2024-11-14T22:56:56","ttl":"","fbhost":"","gy":"{\n    \"免嗅\": function(input) {\n        let html = request(input);\n        /*\nlet playS = html.match(/playSource\\s*=\\s*{\\s*src\\s*:\\s*(.*?),/)[1];\nlet config = html.match(/config\\s*=\\s*({[\\s\\S]*?})\\s*;/)[1];\nlet configurl = config.match(/url:\\s*(.*?)\\s*,/)[1];\nif (/\\.mp4|\\.m3u8|\\.flv/.test(configurl)) {\nreturn configurl;\n}else{\n*/\n        var TMDKKKK = \"\";\n        var TMDPPPP = html.match(/window\\.whatTMDwhatTMDPPPP\\s*=\\s*'([^']+)';/)[1];\n        if (html.match(/window\\.whatTMDwhatTMDKKKK\\s*=\\s*'([^']+)';/)) {\n            TMDKKKK = html.match(/window\\.whatTMDwhatTMDKKKK\\s*=\\s*'([^']+)';/)[1];\n\n        } else {\n            TMDKKKK = \"FNF9aVQF!G*0ux@2hAigUeB3\";\n        };\n\n        function safePlay(whatTMDwhatTMDPPPP, whatTMDwhatTMDKKKK) {\n            eval(getCryptoJS());\n\n\n            let _0x568646 = \"VNF9aVQF!G*0ux@2hAigUeH3\";\n\n            var _0x527427 = CryptoJS.enc.Utf8.parse(whatTMDwhatTMDKKKK || _0x568646);\n            let _0x264b22 = whatTMDwhatTMDPPPP;\n            var _0x33e517 = CryptoJS.enc.Base64.parse(_0x264b22);\n            const _0x240c87 = {\n                ciphertext: _0x33e517\n            };\n            var _0x358b25 = CryptoJS.AES.decrypt(_0x240c87, _0x527427, {\n                mode: CryptoJS.mode.ECB,\n                padding: CryptoJS.pad.Pkcs7\n            });\n            var _0x4f3e21 = _0x358b25.toString(CryptoJS.enc.Utf8);\n            return _0x4f3e21;\n        };\n\n\n        var url = safePlay(TMDPPPP, TMDKKKK)\n\n        return url;\n\n    }\n}","off":"1","gs":"JS"},{"name":"剧哥哥&&随风","host":"let html = fetch(\"https://www.jugege.vip/\");\nlet list = pdfa(html, \"body&&a\");\nlet url = [];\nfor (let i of list) {\n    url.push(pd(i, \"a&&href\"))\n};\n\nlet host = [];\nlet urls = url.slice(0, -2);\nfor (let i = 0; i < urls.length; i++) {\n    let Code = JSON.parse(fetch(urls[i], {\n    withStatusCode: true,\n    timeout: 5000\n})).statusCode;\n    if (Code == 200) {\nhost.push(urls[i] + \"/vodshow/1-----------.html\")\n        console.log(\"找到目标值: \" + Code + \", 循环停止。\");\n        break;\n    };\n};\nreturn host[0]","sourl":"SURL/vodsearch/**----------fypage---.html","sy":"    标题1 = \"电影\";\n    标题2 = \"电视剧\";\n    标题3 = \"综艺\";\n    标题4 = \"动漫\";\n    \n    列表1 = \".module,0&&.tab-list&&a:lt(9)\";\n    列表2 = \".module,1&&.tab-list&&a:lt(9)\";\n    列表3 = \".module,2&&.tab-list&&a:lt(9)\";\n    列表4 = \".module,3&&.tab-list&&a:lt(9)\";\n\n    html = fetch(MY_URL);\n  \n    var 列表 = function(list) {    \n        let l = [];\n        for (let j of list) {\n            let li = j;\n            let lists = [];\n            for (let i in li) {\n                let pic = pdfh(li[i], \"img&&data-original\");\n                let img = /.*url=|.*tu=/.test(pic) ? pic.replace(/.*url=|.*tu=/, \"\") : (/http|pic|jpg|png|jpeg|\\//.test(pic)) ? pd(li[i], \"img&&data-original\") : \"hiker://images/home_bg\";\n                let title = pdfh(li[i], \"a&&title\");\n                let url = pd(li[i], \"a&&href\");\n                let desc = pdfh(li[i], \".module-item-note&&Text\");\n                lists.push(title + '$' + desc + '$' + img + '$' + url);\n            }            \n            l.push(lists);\n        };\n        return l;\n    };   ","fl":"    电影_url = MY_URL;\n    剧集_url = MY_URL.replace(/vodshow\\/1/, \"vodshow/2\");\n    动漫_url = MY_URL.replace(/vodshow\\/1/, \"vodshow/4\");\n    综艺_url = MY_URL.replace(/vodshow\\/1/, \"vodshow/3\");\n\n    let tr_url = getMyVar(\"Myurl.url\", MY_URL);\n\n    if (/\\/?([\\w\\d]+|)-.*?-.*?-.*?-.*?-.*?-.*?-.*?-\\d*---\\d*(\\.html|\\/$)/.test(MY_URL)) {\n        true_url = tr_url.replace(/---\\.html/, page + '---.html').replace(/---(\\d+)\\.html/, page + '---$1.html').replace(/---\\//, page + '---/').replace(/---(\\d+)\\//, page + '---$1/');\n    } else\n    if (/((\\/(\\w*)show)?((\\/|-)[\\w\\d%])?(\\/area\\/[\\w\\d%]+)?(\\/by\\/[\\w\\d%]+)?(\\/id\\/\\d+)?(\\/letter\\/[\\w\\d%]+)?)(\\/page\\/\\d+)?(\\/year\\/\\d+)?(\\.html|\\/$)/.test(MY_URL)) {\n        true_url = /\\/year\\//.test(tr_url) ? tr_url.replace(/year\\/(\\d+).html/, 'page/' + page + '/year/$1.html').replace(/year\\/(\\d+)\\//, 'page/' + page + '/year/$1/') : /\\/$/.test(tr_url) ? tr_url + 'page/' + page + '/' : tr_url.replace(/\\.html/, '/page/' + page + '.html');\n    };\n\n\n    大类 = \"body&&.scroll-box\";\n    小类 = \"\";\n    子类 = \"body&&a:not(:matches(重置|首页|app|APP|热榜|发布|周表)):not(.text-muted)\";\n\n    大名 = \"a&&Text\";\n    大链 = \"a&&href\";\n    小名 = \"a&&Text\";\n    小链 = \"a&&href\";\n\n    /*var 换大类 = function(text) {\n        return text.replace(/type/g, \"vodshow/id\");\n    };*/\n\n    html = fetch(true_url);\n    \n    var 数字 = \"on\";\n\n    var 列表 = function(html) {\n        let list = pdfa(html, \"body&&.module-item\");\n        let s = [];\n        for (let i in list) {\n            let li = list[i];\n            s.push({\n                title: pdfh(li, \"a&&title\"),\n                desc: pdfh(li, \".module-item-note&&Text\"),\n                img: pd(li, \"img&&data-original\"),\n                url: pd(li, \"a&&href\")\n            })\n        }\n        return s;\n    };","er":"    类型 = \".module-info-tag&&Text\";\n    导演 = \".module-info-item:matches(导演)&&Text\";\n    主演 = \".module-info-item:matches(主演|演员)&&Text\";\n    简介 = \".module-info-introduction-content&&p&&Text\";\n    线路 = \"body&&.tab-item\";\n    线名 = \"span&&Text\";\n    列表 = \"body&&.sort-list\";\n    子列 = \"body&&a\";\n    名称 = \"a&&Text\";\n    链接 = \"a&&href\";\n    html = fetch(MY_URL);\n    var 推荐 = function(html) {\n        let list = [];\n        let contui = pdfa(html, \"body&&.module-item:lt(9)\");\n        for (let i in contui) {\n            let li = contui[i];\n            list.push({\n                title: pdfh(li, \"a&&title\"),\n                desc: pdfh(li, \".module-item-note&&Text\"),\n                img: pd(li, \"img&&data-original\"),\n                url: pd(li, \"a&&href\")\n            })\n        };\n        return list;\n    };   \n//document.querySelectorAll('button')[1].click();","so":"    html = fetch(ssurl);\n    /*\"验证\": function(html) {\n        return /滑动验证/.test(html);\n    },*/\n    var 列表 = function(html) {\n        let list = pdfa(html, \".module-items&&.module-item\");\n        let f = [];\n        for (let i in list) {\n            let li = list[i];\n            f.push({\n                title: pdfh(li, \"img&&alt\"),\n                desc: pdfh(li, \".module-item-note&&Text\"),\n                img: pdfh(li, \"img&&data-original\"),\n                url: pdfh(li, \"a&&href\")\n            })\n        };\n        return f;\n    };","time":"2024-11-14T20:50:20","ttl":"","fbhost":"https://www.jugege.la/vodshow/1-----------.html","gy":"{\n    \"数字\": function(html) {\n        return /验证码/.test(html);\n    },\n    \"广告\": {\n        \"hosts\": [\n            \"hai\"\n        ],\n        \"name\": \"海外\",\n        \"regex\": [\n            \"8.16\",\n            \"8.1748\",\n            \"10.0099\",\n            \"10.3333\",\n            \"10.85\",\n            \"12.33\",\n            \"16.0599\"\n        ]\n    },\n    \"点播\": 'document.querySelector(\"#playleft iframe\").contentWindow.document.querySelector(\"#start\").click()'\n}","off":"1","gs":"JS"},{"name":"NO视频&&莲新&狗浩啊","host":"https://www.novipnoad.net/movie/","sourl":"https://www.novipnoad.net/page/fypage/?s=**","sy":"    标题1 = \"本月热门\";\n    标题2 = \"电影\";\n    标题3 = \"美剧\";\n    标题4 = \"动画\";\n    标题5 = \"音乐\";\n    标题6 = \"短片\";\n \n    列表1 = \".smart-item,0&&.video-item:lt(6)\";\n    列表2 = \".smart-item,1&&.video-item:lt(9)\";\n    列表3 = \".smart-item,2&&.video-item:lt(9)\";\n    列表4 = \".smart-item,5&&.video-item:lt(9)\";\n    列表5 = \".smart-item,6&&.video-item:lt(9)\";\n    列表6 = \".smart-item,7&&.video-item:lt(9)\";\n   \n    轮播 = \".carousel-content&&.video-item\";\n   \n    html = fetch(MY_URL);\n\n    var 样式 = function(title) {\n        return \"movie_2\";\n    };\n\n    var 列表 = function(list) {\n        let l = [];\n        for (let j of list) {\n            let li = j;\n            let lists = [];\n            for (let i in li) {\n                let img = pd(li[i], \"img&&data-original||data-cfsrc\");\n                //let img = /.*url=|.*tu=/.test(pic) ? pic.replace(/.*url=|.*tu=/, \"\") : (/https|pic|webp|jpg|png|jpeg|\\//.test(pic)) ? pd(li[i], \"img&&data-original\") : \"hiker://images/home_bg\";\n                let text = pdfh(li[i], \"a&&title\");\n                let title = text.replace(/【.*?】/g,'').replace(/\\(.*?\\)/g,'').replace(/@[^@]+/,'').replace('完结','').replace(/\\d+-\\d+/,'');\n                //console.log(li[i]);\n                let url = pd(li[i], \"a&&href\");\n                let desc = '';\n                if(/\\(.*?\\)/.test(text)){\n                    desc = text.match(/\\((.*?)\\)/)[1];\n                    }else if(/完结/.test(text)){\n                        desc = '完结';\n                        }else if(/【\\d*\\w*】/.test(text)){\n                            desc = text.match(/【(\\d*\\w*)】/)[1]\n                            }else if(/【.*?】/.test(text)){\n                                desc = text.match(/【(.*?)】/)[1];\n                                   }\n                //console.log(desc);\n                lists.push(title + '$' + desc + '$' + img + '$' + url);\n            }\n            l.push(lists);\n            \n        };\n        return l;\n    };","fl":"    var 标题 = {\n        \"电影\": MY_URL,\n        \"动画\": MY_URL.replace(/movie/, \"anime\"),\n        \"综艺\": MY_URL.replace(/movie/, \"shows\"),\n        \"音乐\": MY_URL.replace(/movie/, \"music\"),\n        \"短片\": MY_URL.replace(/movie/, \"short\"),\n    };\n\n    let tr_url = getMyVar(\"Myurl.url\", MY_URL);\n    //console.log(tr_url);\n    \n    if (/page/.test(tr_url)) {\n        true_url = tr_url;\n    }else if(/\\?/.test(tr_url)){\n        true_url = tr_url.replace(/\\?/,'page/' + page +'?')\n        }else{\n        true_url = tr_url + 'page/' + page;\n        };\n\n    if(page==1){\n        true_url = tr_url;\n        };\n\n\n    大类 = \"body&&.navbar-collapse&&.nav-ul-menu\";\n    小类 = \"body&&.video-listing-filter\";\n    子类 = \"body&&li:not(:matches(首页|剧集|版本))\";\n\n    大名 = \"a&&Text\";\n    大链 = \"a&&href\";\n    小名 = \"a&&Text\";\n    小链 = \"a&&href\";\n\n    //console.log(true_url);\n    var html = fetch(true_url);\n    //console.log(html);\n    var 列表 = function(html) {\n        let list = pdfa(html, \"body&&.video-listing-content&&.col-md-3\");\n        let s = [];\n        for (let i in list) {\n            let li = list[i];\n            \n            let text = pdfh(li,\"a,1&&Text\");\n            \n            //console.log(text);\n            let title = text.replace(/【.*?】/g,'').replace(/\\(.*?\\)/g,'').replace(/@[^@]+/,'').replace('完结','').replace(/\\d+-\\d+/,'');\n            let desc = '';\n                if(/\\(.*?\\)/.test(text)){\n                    desc = text.match(/\\((.*?)\\)/)[1];\n                    }else if(/完结/.test(text)){\n                        desc = '完结';\n                        }else if(/【\\d*\\w*】/.test(text)){\n                            desc = text.match(/【(\\d*\\w*)】/)[1]\n                            }else if(/【.*?】/.test(text)){\n                                desc = text.match(/【(.*?)】/)[1];\n                                   }\n                  \n            s.push({\n                title: title,\n                desc: desc,\n                img: pd(li, \"img&&data-original\"),\n                url: pd(li, \"a&&href\"),\n                col_type: \"movie_2\"\n            })\n        }\n        return s;\n    };","er":"    类型 = \".item-tax-list:matches(Category)&&a&&Text\";\n    导演 = \".author&&a&&Text\";\n    主演 = \".item-tax-list:matches(Tags)&&a&&Text\";\n    简介 = \".item-content&&p:not(style)&&Text\";\n    \n    html = fetch(MY_URL);\n    列表 = pdfa(html, \"body&&td||.toggled\");\n    子列 = function(li) {\n        let lis = pdfa(li, \"body&&p\").splice(0, 1);\n        let l = lis.length != 0 ? lis : pdfa(html, \"body&&td&&a\");\n        //console.log(l);\n        return l;\n    };\n    名称 = function(title) {\n        let text = pdfh(title, \"a&&Text\")\n        let tex = text.length != 0 ? text : \"E01\";\n        //console.log(title);\n        return tex;\n    };\n    链接 = function(url) {\n        let hre;\n        if (/data-vid/.test(url)) {\n            hre = MY_URL.replace(/#.*?#/g, '') + '@' + pdfh(url, \"a&&data-vid\");\n        } else {\n            hre = MY_URL.replace(/#.*?#/g, '') + '@' + url.match(/vid:\"(.*?)\"/)[1];\n        }\n        //console.log(hre)\n        return hre;\n    };\n    推荐 = function(html) {\n        let list = pdfa(html, \".smart-box-content&&.video-item:lt(3)\");\n        let s = [];\n        for (let i in list) {\n            let li = list[i];\n            let text = pdfh(li, \"a&&title\");\n            let title = text.replace(/【.*?】/g, '').replace(/\\(.*?\\)/g, '').replace(/@[^@]+/, '').replace('完结', '').replace(/\\d+-\\d+/, '');\n            let desc;\n            if (/\\(.*?\\)/.test(text)) {\n                desc = text.match(/\\((.*?)\\)/)[1];\n            } else if (/完结/.test(text)) {\n                desc = '完结';\n            } else if (/【\\d*\\w*】/.test(text)) {\n                desc = text.match(/【(\\d*\\w*)】/)[1]\n            } else if (/【.*?】/.test(text)) {\n                desc = text.match(/【(.*?)】/)[1];\n            }\n            s.push({\n                title: title,\n                desc: desc,\n                img: pd(li, \"img&&data-original\"),\n                url: pd(li, \"a&&href\"),\n                col_type: \"movie_2\"\n            })\n        }\n        return s;\n    };","so":"    //搜索链接为ssurl\n    let html = fetchCodeByWebView(ssurl, {\n        checkJs: $.toString(() => {\n            return document.querySelector('.search-listing-content');\n        })\n    });\n    //console.log(html);\n    var 列表 = function(html) {\n        let list = pdfa(html, \"body&&.search-listing-content&&.video-item\");\n        console.log(list);\n        let f = [];\n        for (let i in list) {\n            let li = list[i];\n            let text = pdfh(li, \"a&&title\");\n            let title = text.replace(/【.*?】/g,'').replace(/\\(.*?\\)/g,'').replace(/@[^@]+/,'').replace('完结','').replace(/\\d+-\\d+/,'');\n            let desc = '';\n                if(/\\(.*?\\)/.test(text)){\n                    desc = text.match(/\\((.*?)\\)/)[1];\n                    }else if(/完结/.test(text)){\n                        desc = '完结';\n                        }else if(/【\\d*\\w*】/.test(text)){\n                            desc = text.match(/【(\\d*\\w*)】/)[1]\n                            }else if(/【.*?】/.test(text)){\n                                desc = text.match(/【(.*?)】/)[1];\n                                   }\n             desc = desc + '\\n' + pdfh(li,\".blog-excerpt&&Text\");\n            f.push({\n                title: title,\n                desc: desc,\n                img: pd(li, \"img&&data-original\"),\n                url: pd(li, \"a&&href\"),\n                col_type: \"movie_1_left_pic\"\n            })\n        }\n        return f;\n    };","time":"2024-11-14T20:38:38","ttl":"","fbhost":"","gy":"{\n    \"免嗅\": function(input) {\n        //获取ckey等函数 \n        function _0xe11c(d, e, f) {\n            var _0xc42e = [\"\", \"split\", \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/\", \"slice\", \"indexOf\", \"\", \"\", \".\", \"pow\", \"reduce\", \"reverse\", \"0\"];\n            var g = _0xc42e[2][_0xc42e[1]](_0xc42e[0]);\n            var h = g[_0xc42e[3]](0, e);\n            var i = g[_0xc42e[3]](0, f);\n            var j = d[_0xc42e[1]](_0xc42e[0])[_0xc42e[10]]()[_0xc42e[9]](function(a, b, c) {\n                if (h[_0xc42e[4]](b) !== -1) return a += h[_0xc42e[4]](b) * (Math[_0xc42e[8]](e, c))\n            }, 0);\n            var k = _0xc42e[0];\n            while (j > 0) {\n                k = i[j % f] + k;\n                j = (j - (j % f)) / f\n            }\n            return k || _0xc42e[11]\n        }\n\n        function ck(h, u, n, t, e, r) {\n            r = \"\";\n            for (var i = 0, len = h.length; i < len; i++) {\n                var s = \"\";\n                while (h[i] !== n[e]) {\n                    s += h[i];\n                    i++\n                }\n                for (var j = 0; j < n.length; j++) s = s.replace(new RegExp(n[j], \"g\"), j);\n                r += String.fromCharCode(_0xe11c(s, e, 10) - t)\n            }\n            return decodeURIComponent(escape(r))\n        }\n\n        //链接解密函数\n        function _0x2b01e7(_0x12f758, _0xda9b8e) {\n            var _0x3bf069 = window0.atob(_0x12f758);\n            for (var _0x19fa71, _0x300ace = [], _0x18815b = 0, _0xe5da02 = \"\", _0x1d31f3 = 0; 256 > _0x1d31f3; _0x1d31f3++) {\n                _0x300ace[_0x1d31f3] = _0x1d31f3;\n            }\n            for (_0x1d31f3 = 0; 256 > _0x1d31f3; _0x1d31f3++) {\n                _0x18815b = (_0x18815b + _0x300ace[_0x1d31f3] + _0xda9b8e.charCodeAt(_0x1d31f3 % _0xda9b8e.length)) % 256;\n                _0x19fa71 = _0x300ace[_0x1d31f3];\n                _0x300ace[_0x1d31f3] = _0x300ace[_0x18815b];\n                _0x300ace[_0x18815b] = _0x19fa71;\n            }\n            for (b = _0x18815b = _0x1d31f3 = 0; b < _0x3bf069.length; b++) {\n                _0x1d31f3 = (_0x1d31f3 + 1) % 256;\n                _0x18815b = (_0x18815b + _0x300ace[_0x1d31f3]) % 256;\n                _0x19fa71 = _0x300ace[_0x1d31f3];\n                _0x300ace[_0x1d31f3] = _0x300ace[_0x18815b];\n                _0x300ace[_0x18815b] = _0x19fa71;\n                _0xe5da02 += String.fromCharCode(_0x3bf069.charCodeAt(b) ^ _0x300ace[(_0x300ace[_0x1d31f3] + _0x300ace[_0x18815b]) % 256]);\n            }\n            return _0xe5da02;\n        }\n        Object.defineProperty(JSON, \"decrypt\", {\n            \"value\": function(_0x395610) {\n                var _0x36346e = _0x2b01e7(_0x395610, \"5f3651b7\");\n                return this.parse(_0x36346e);\n            }\n        });\n\n        input = input.split('@');\n        var vid = input[1];\n        input = input[0];\n        let url = request(input, {\n            headers: {\n                Referer: input\n            }\n        });\n        let rf = input.replace(\"https://www.novipnoad.net\", \"\");\n        //console.log(rf);\n\n        var pkey = url.match(/pkey:\"(.*?)\"/)[1];\n        let urll = \"https://player.novipnoad.net/v1/?url=\" + vid + \"&pkey=\" + pkey + \"&ref=\" + rf;\n        let html = request(urll, {\n            headers: {\n                Referer: \"https://www.novipnoad.net/\"\n            }\n        })\n        let htmll = html.match(/\\)\\}\\((.*?)\\)/)[1];\n        let data0 = htmll.split(\",\")[0].match(/\"([^\"]*)\"/)[1];\n        let data1 = htmll.split(\",\")[1];\n        let data2 = htmll.split(\",\")[2].match(/\"([^\"]*)\"/)[1];\n        let data3 = htmll.split(\",\")[3];\n        let data4 = htmll.split(\",\")[4];\n        let data5 = htmll.split(\",\")[5];\n        let key = ck(data0, data1, data2, data3, data4, data5);\n        eval(key.replace('window.sessionStorage', 'storage0'))\n        const vkey = storage0.getItem('vkey');\n        eval(html.match(/const player =([\\s\\S]*?;){8}/)[0]);\n        let eq = \"https://player.novipnoad.net\" + player + \"?id=\" + params.id + \"&device=\" + params.device;\n        eval(request(eq, {\n            headers: {\n                Referer: \"https://www.novipnoad.net/\"\n            }\n        }).match(/const ckey =([\\s\\S]*?;){2}/)[0]);\n        const jk = jsapi + '?ckey=' + ckey.toUpperCase() + '&ref=' + encodeURIComponent(ref) + '&ip=' + ip + '&time=' + time;\n        eval(request(jk, {\n            headers: {\n                Referer: \"https://www.novipnoad.net/\"\n            }\n        }))\n        var play = null;\n        videoUrl.quality.forEach(function(quality) {\n            play = quality.url\n        });\n\n        if (!play.startsWith('http')) {\n            play = play.replace(/.*?docId=/, '');\n            play = unescape(play.replace(/\\\\u/g, \"%u\"));\n            var playurl = JSON.parse(request(play));\n            play = playurl[\"@content.downloadUrl\"]\n        }\n        console.log(play);\n        return play + '#isVideo=true#';\n    }\n}","off":"1","gs":"JS"},{"name":"哔嘀影视&&莲新","host":"let host=\"https://www.bdys.me\";\nlet url = \"https://www.yjys02.com/s/all\";\nreturn url;","sourl":"SURL/search/**/fypage","sy":"    \n    标题1 = \"h2:matches(最新电影)&&Text\";\n    标题2 = \"h2:matches(最新剧集)&&Text\";\n    标题3 = \"h2:matches(国产剧集)&&Text\";\n    标题4 = \"h2:matches(港台剧集)&&Text\";\n    标题5 = \"h2:matches(日韩剧集)&&Text\";\n    标题6 = \"h2:matches(动漫)&&Text\";\n\n    列表1 = \".container,0&&.col-4:lt(9)\";\n    列表2 = \".container,1&&.col-4:lt(9)\";\n    列表3 = \".container,2&&.col-4:lt(9)\";\n    列表4 = \".container,3&&.col-4:lt(9)\";\n    列表5 = \".container,6&&.col-4:lt(9)\";\n    列表6 = \".container,4&&.col-4:lt(9)\";\n    \n    轮播 = \".carousel-inner&&a\";\n    \n    html = fetch(MY_URL);\n    //console.log(MY_URL);\n    //console.log(html);\n        \n    var 样式 = function(title) {\n        return \"movie_3_marquee\";\n    };\n    \n    \n    var 列表显示 = function(list) {\n        \n        let l = [];\n        for (let j of list) {\n            \n            let li = j;\n            let lists = [];\n            for (let i in li) {\n                let pic = pdfh(li[i], \"img&&data-src||src\");\n                let img = /.*url=|.*tu=/.test(pic) ? pic.replace(/.*url=|.*tu=/, \"\") : (/http|pic|jpg|png|jpeg|\\//.test(pic)) ? pd(li[i], \"img&&data-src||src\") : \"hiker://images/home_bg\";\n                let title = pdfh(li[i], \"h3&&Text\").replace(/.*?《(.*?)》[^》]+/,'$1');\n                let url = pd(li[i], \"a&&href\");\n                let desc = pdfh(li[i], \"span||p&&Text\");\n                lists.push(title + '$' + desc + '$' + img + '$' + url);\n                \n            }\n            \n            l.push(lists);\n        };\n        return l;\n    };\n    \n    //var 免嗅 = function(input) {\n    //转嗅探\n    //return \"嗅探\";\n    //let html = fetch(input);\n    //}\n","fl":"    /*电影_url = MY_URL.replace(/\\/all/,'/all?type=0');\n    剧集_url = MY_URL.replace(/\\/all/,'/all?type=1');\n    动漫_url = MY_URL.replace(/\\/all/,'/donghua');\n    综艺_url = MY_URL.replace(/\\/all/,'/zongyi');*/\n    \n    let tr_url = getMyVar(\"Myurl.url\", MY_URL);\n    \n    \n    if (/\\?/g.test(tr_url)) {\n        if (/\\d+\\?/g.test(tr_url)) {\n            true_url = tr_url.replace(/\\d+\\?/g, page + '?')\n        } else {\n            true_url = tr_url.replace(/\\?/g, '/' + page + '?')\n        }\n    } else{\n        true_url = tr_url + '/' + page\n    }\n    \n    \n   \n\n\n    大类 = \"body&&.card,1&&dl\";\n    拼接小类 = \"\";\n    分类子 = \"body&&a:not(:matches(留言|更多|旧版|首页|国产电视剧))\";\n\n    大类名 = \"a&&Text\";\n    大类链 = \"a&&href\";\n    小类名 = \"a&&Text\";\n    小类链 = \"a&&href\";\n\n    \n   \n    html = fetchPC(true_url);\n    var 显示列表 = function(html) {\n        let list = pdfa(html, \"body&&.card-sm\");\n        let s = [];\n        for (let i in list) {\n            let li = list[i];\n            s.push({\n                title: pdfh(li, \"h3&&Text\"),\n                desc: pdfh(li, \"span||p&&Text\"),\n                img: pd(li, \"img&&src||data-src\"),\n                url: pd(li, \"a&&href\")\n            })\n        }\n        \n        return s;\n    };\n\n    //var 免嗅 = function(input) {\n    //转嗅探\n    //return \"嗅探\";\n    //let html = fetch(input);\n    //}\n\n\n\n\n\n","er":"    类型 = \"body&&.mt-3&&p:matches(类型)&&Text\";\n    导演 = \"body&&.mt-3&&p:matches(导演)&&Text\";\n    主演 = \"body&&.mt-3&&p:matches(主演|演员)&&Text\";\n    简介 = \"body&&#synopsis&&.card-body&&Text\";\n\n    线路 = \"body&&.mt-3:has(:matches(播放列表|下载地址|种子列表))\";\n    线路名 = \"h3&&Text\";\n\n    列表 = \"body&&#play-list||#download-list||#torrent-list\";\n    子列表 = \"body&&a||tr||li,0\";\n\n    选集名 = \"a&&Text\";\n    选集链 = \"a&&href\";\n\n\n    //二级链接为MY_URL\n    html = fetch(MY_URL);\n    \n    var 推荐 = function(html) {\n        let list = [];\n        let contui = pdfa(html, \"body&&.card-sm:lt(9)\");\n        for (let i in contui) {\n            let li = contui[i];\n            list.push({\n                title: pdfh(li, \"h4&&Text\"),\n                desc: pdfh(li, \"span||p&&Text\"),\n                img: pd(li, \"img&&src||data-src\"),\n                url: pd(li, \"a&&href\")\n            })\n        };\n        return list;\n    };\n    \n   var 免嗅 = function(input) {\n        \n     let html=request(input)\nlet pid=html.match(/var pid = (\\d+);/)[1]\n\neval(getCryptoJS())\nvar t = new Date().getTime();\n   key = CryptoJS.enc.Utf8.parse(md5(pid + \"-\" + t).substring(0, 16));\nlet encrypted = CryptoJS.AES.encrypt(pid + \"-\" + t, key, {\n  mode: CryptoJS.mode.ECB,\n  padding: CryptoJS.pad.Pkcs7\n});\nlet sg = encrypted.ciphertext.toString(CryptoJS.enc.Hex).toUpperCase();\nlet lines = MY_HOME + '/lines?t=' + t + '&sg=' + sg + '&pid=' + pid;\n let  play = JSON.parse(request(lines)).data.url3;\n//console.log(play);\nif(/,/.test(play)){\n    play = play.split(',');\n    let urls = [];\n        for (let i in play) {            \n              urls[i] = play[i]+\"#isVideo=true#\";\n        }\n    //console.log(urls);\n    return JSON.stringify({\n            urls: urls\n        });\n    }else{\n//console.log(play);\nreturn play+\"#isVideo=true#\"\n }       \n        \n    }\n    \n    \n\n","so":"    //搜索链接为ssurl\n    var htm = fetch(ssurl);\n    let c = getVar(\"cecidy\", \"\");\nif (c != \"\") {\n    setItem(MY_HOME, c);\n    clearVar(\"cecidy\");\n}\n//clearItem(MY_HOME)\nvar cookie = getItem(MY_HOME, \"\")\n\nlet headers = {\n    \"Cookie\": cookie,\n    \"User-Agent\": MOBILE_UA,\n};\n//log(cookie)\nlet html = fetch(MY_URL, {\n    headers: headers,\n});\n\nif (html.includes(\"验证码\")) {\n    d.push({\n        title: \"人机验证\",\n        col_type: \"text_center_1\",\n        url: MY_URL + $(\"\").rule(() => {\n            var d = [];\n            d.push({\n                title: \"\",\n                url: MY_URL,\n                col_type: \"x5_webview_single\",\n                desc: \"float&&100%\",\n                extra: {\n                    ua: MOBILE_UA,\n                    js: $.toString(() => {\n                       function check(){\n                            let c = fba.getCookie(location.href);\n                            let nodes = document.querySelectorAll('.row.row-0');\n                            fba.console.log(location.href);\n                            fba.console.log(c);\n                            if (nodes && nodes.length > 0 && c) {\n                                fba.putVar(\"cecidy\", c);\n                                fba.log(c)\n                                fba.parseLazyRule($$$().lazyRule(() => {\n                                    back();\n                                }));\n                            } else {\n                                setTimeout(check, 250);\n                            }\n                        }\n                      check();\n                    })\n                }\n            })\n            setResult(d);\n        })\n    })\n}\nelse{\n    html=htm;\n}\n    var 搜索列表 = function(html) {\n        let list = pdfa(html, \"body&&.row.row-0\");\n        let f = [];\n        for (let i in list) {\n            let li = list[i];\n            f.push({\n                title: pdfh(li, \".alert-title&&title\"),\n                desc: pdfh(li, \".card-body&&p,0&&Text\")+'\\n'+pdfh(li, \".card-body&&p,1&&Text\")+'\\n'+pdfh(li, \".card-body&&p,2&&Text\")+'\\n'+pdfh(li, \".card-body&&p,3&&Text\"),\n                img: pdfh(li, \"img&&src\"),\n                url: pdfh(li, \"a&&href\")\n            })\n        };\n        return f;\n    };\n\n    //var 免嗅 = function(input) {\n    //转嗅探\n    //return \"嗅探\";\n    //let html = fetch(input);\n    //}\n    \n    \n","time":"2024-09-11T07:14:15","ttl":"","fbhost":"https://www.yjys02.com/s/all","off":"1","gs":"JS"},{"name":"✣电影之家&&羽龑","host":"https://www.dyzj.me/index.php/vod/type/id/1.html","sourl":"https://www.dyzj.me/index.php/vod/search.html?wd=**&submit=","sy":"*","fl":"    电影_url = MY_URL;\n    剧集_url = MY_URL.replace(/1/, \"2\");\n    动漫_url = MY_URL.replace(/1/, \"4\");\n    综艺_url = MY_URL.replace(/1/, \"3\");\n    短剧_url = MY_URL.replace(/1/, \"5\");\n    let tr_url = getMyVar(\"Myurl.url\", MY_URL);\n\n    if (/\\/?([\\w\\d]+|)-.*?-.*?-.*?-.*?-.*?-.*?-.*?-\\d*---\\d*(\\.html|\\/$)/.test(MY_URL)) {\n        true_url = tr_url.replace(/---\\.html/, page + '---.html').replace(/---(\\d+)\\.html/, page + '---$1.html').replace(/---\\//, page + '---/').replace(/---(\\d+)\\//, page + '---$1/');\n    } else\n    if (/((\\/(\\w*)show)?((\\/|-)[\\w\\d%])?(\\/area\\/[\\w\\d%]+)?(\\/by\\/[\\w\\d%]+)?(\\/id\\/\\d+)?(\\/letter\\/[\\w\\d%]+)?)(\\/page\\/\\d+)?(\\/year\\/\\d+)?(\\.html|\\/$)/.test(MY_URL)) {\n        true_url = /\\/year\\//.test(tr_url) ? tr_url.replace(/year\\/(\\d+).html/, 'page/' + page + '/year/$1.html').replace(/year\\/(\\d+)\\//, 'page/' + page + '/year/$1/') : /\\/$/.test(tr_url) ? tr_url + 'page/' + page + '/' : tr_url.replace(/\\.html/, '/page/' + page + '.html');\n    } else\n    if (/vod-show-id|vodtype\\//.test(MY_URL)) {\n        true_url = tr_url.replace(/vodtype\\/(\\d+)\\.html/, 'vodtype/$1/page/' + page + '.html').replace(/\\-id\\-(\\d+)/, \"-id-$1-page-\" + page);\n    }; //log(true_url);\n\n\n    大类 = \"body&&.myui-screen__list\";\n    拼接小类 = \"\";\n    分类子 = \"body&&a:not(:matches(重置|首页|app|APP|热榜|发布|周表))\";\n\n    大类名 = \"a&&Text\";\n    大类链 = \"a&&href\";\n    小类名 = \"a&&Text\";\n    小类链 = \"a&&href\";\n\n    var 大类链替换 = function(text) {\n        return text.replace(/type/g, \"type/id\");\n    };\n\n    html = fetch(true_url);\n\n    var 显示列表 = function(html) {\n        let list = pdfa(html, \"body&&.myui-vodlist__box\");\n        let s = [];\n        for (let i in list) {\n            let li = list[i];\n            s.push({\n                title: pdfh(li, \"a&&title\"),\n                desc: pdfh(li, \".pic-text&&Text\"),\n                img: pd(li, \".lazyload&&data-original\"),\n                url: pd(li, \"a&&href\")\n            })\n        }\n        return s;\n    };\n\n    //var 免嗅 = function(input) {\n    //转嗅探\n    //return \"嗅探\";\n    //let html = fetch(input);\n    //}","er":"    类型 = \".desc:matches(分类)&&Text\";\n    导演 = \".text-muted:matches(导演)&&Text\";\n    主演 = \".text-muted:matches(主演|演员)&&Text\";\n    简介 = \".content:matches(简介)&&Text\";\n\n    线路 = \".nav-tabs&&li\";\n    线路名 = \"a&&Text\";\n\n    列表 = \"body&&.myui-content__list\";\n    子列表 = \"body&&a\";\n\n    选集名 = \"a&&Text\";\n    选集链 = \"a&&href\";\n\n    //二级链接为MY_URL\n    html = fetch(MY_URL);\n\n    var 推荐 = function(html) {\n        let list = [];\n        let contui = pdfa(html, \"body&&.myui-panel\");\n        for (let i in contui) {\n            let li = contui[i];\n            list.push({\n                title: pdfh(li, \"h1&&Text\"),\n                desc: pdfh(li, \".pic-text&&Text\"),\n                img: pd(li, \"img&&data-original\"),\n                url: pd(li, \"a&&href\")\n            })\n        };\n        return list;\n    };\n    \n    //var 免嗅 = function(input) {\n        //let html = fetch(input);\n        //return video;\n    //}","so":"    //搜索链接为ssurl\n    let html = fetch(ssurl);\n\n    var 搜索列表 = function(html) {\n        let list = pdfa(html, \"body&&.myui-vodlist__box\");\n        let f = [];\n        for (let i in list) {\n            let li = list[i];\n            f.push({\n                title: pdfh(li, \"a&&title\"),\n                desc: pdfh(li, \".pic-text&&Text\"),\n                img: pdfh(li, \".lazyload&&data-original\"),\n                url: pdfh(li, \"a&&href\")\n            })\n        };\n        return f;\n    };\n\n    //var 免嗅 = function(input) {\n    //转嗅探\n    //return \"嗅探\";\n    //let html = fetch(input);\n    //}","time":"2024-07-01 13:39:33","off":"1","gs":"JS","fbhost":""}